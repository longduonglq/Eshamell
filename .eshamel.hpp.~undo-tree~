(undo-tree-save-format-version . 1)
"e9d702ac0c50544ef9336a8ac4bac61efd4fbaa7"
[nil nil nil nil (26026 42105 576102 0) 0 nil]
([nil nil ((2 . 13) (1 . 2) (#("#" 0 1 (wrap-prefix "   " fontified t)) . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) 2 (1 . 2) (t 26026 41918 211541 965000)) nil (26026 42105 576101 0) 0 nil])
([nil nil ((15 . 25) (14 . 14) (14 . 15) (13 . 14) 12) nil (26026 42105 576097 0) 0 nil])
([nil nil ((28 . 29) (27 . 29) (26 . 28) (25 . 26) 24) nil (26026 42105 576095 0) 0 nil])
([nil nil ((#("l" 0 1 (face tree-sitter-hl-face:type wrap-prefix "  " fontified t)) . -32) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) 33 (28 . 33) (#("m" 0 1 (face tree-sitter-hl-face:type wrap-prefix "  " fontified t)) . -28) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) 29 (27 . 29) (#("m" 0 1 (face tree-sitter-hl-face:type wrap-prefix "  " fontified t)) . -27) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) 28 (27 . 28) (#("c" 0 1 (face tree-sitter-hl-face:type wrap-prefix "  " fontified t)) . -27) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) 28 (25 . 28) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -25) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) 26 (25 . 26)) nil (26026 42105 576091 0) 0 nil])
([nil nil ((35 . 36) (#("	" 0 1 (fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . 35)) nil (26026 42105 576076 0) 0 nil])
([nil nil ((#("templ" 0 1 (fontified t wrap-prefix #("	  " 0 1 (fontified t))) 1 2 (fontified t wrap-prefix #("	  " 0 1 (fontified t))) 2 3 (fontified t wrap-prefix #("	  " 0 1 (fontified t))) 3 4 (fontified t wrap-prefix #("	  " 0 1 (fontified t))) 4 5 (fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . -36) (undo-tree-id1839 . -5) (undo-tree-id1840 . -5) (undo-tree-id1841 . -5) 41 (40 . 41) (36 . 40) (35 . 36) (#("	" 0 1 (fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . 35)) nil (26026 42105 576074 0) 0 nil])
([nil nil ((35 . 36) (#("	" 0 1 (fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . 35) (undo-tree-id1838 . -1)) nil (26026 42105 576069 0) 0 nil])
([nil nil ((35 . 52)) nil (26026 42105 576067 0) 0 nil])
([nil nil ((56 . 57) (55 . 57) (54 . 56) (53 . 54) 51) nil (26026 42105 576065 0) 0 nil])
([nil nil ((#("	" 0 1 (wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . -35) (undo-tree-id1837 . -1) 36 (34 . 36) 33) nil (26026 42105 576063 0) 0 nil])
([nil nil ((36 . 43) (35 . 36) (#("s" 0 1 (face tree-sitter-hl-face:type wrap-prefix "  " fontified t)) . -35) (undo-tree-id1835 . -1) (#("t" 0 1 (face tree-sitter-hl-face:type wrap-prefix "  " fontified t)) . -36) (undo-tree-id1836 . -1) 37 (35 . 37)) nil (26026 42105 576060 0) 0 nil])
([nil nil ((43 . 46) (#("XmlDoc" 0 1 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 1 2 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 2 3 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 3 4 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 4 5 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 5 6 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . -43) (undo-tree-id1817 . -3) (undo-tree-id1818 . -3) (undo-tree-id1819 . -6) 49 (44 . 49) (#("D" 0 1 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . -44) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) 45 (#("o" 0 1 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . -45) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (#("c" 0 1 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . -46) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) 47 (43 . 47) (#("xmDoc" 0 1 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 1 2 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 2 3 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 3 4 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 4 5 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . -43) (undo-tree-id1829 . -5) (undo-tree-id1830 . -5) (undo-tree-id1831 . -5) 48 (43 . 48) (#("XmlDoc" 0 1 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 1 2 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 2 3 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 3 4 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 4 5 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 5 6 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . -43) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -6) 49 (43 . 49)) nil (26026 42105 576054 0) 0 nil])
([nil nil ((50 . 52) (49 . 52) (48 . 50) (46 . 48)) nil (26026 42105 576032 0) 0 nil])
([nil nil ((#("		
" 0 3 (wrap-prefix #("		  " 0 2 (fontified t)) fontified t)) . 50) (undo-tree-id1790 . 1) (undo-tree-id1791 . -1) (undo-tree-id1792 . 1) (undo-tree-id1793 . -2) (undo-tree-id1794 . -2) (undo-tree-id1795 . -2) (undo-tree-id1796 . -2) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (undo-tree-id1799 . -2) (undo-tree-id1800 . -2) (undo-tree-id1801 . -2) (undo-tree-id1802 . -2) (undo-tree-id1803 . -2) (undo-tree-id1804 . -2) (undo-tree-id1805 . -2) (undo-tree-id1806 . -2) (undo-tree-id1807 . -2) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) 51) nil (26026 42105 576029 0) 0 nil])
([nil nil ((52 . 53)) nil (26026 42105 576002 0) 0 nil])
([nil nil ((#("struct Doc
	{
	};" 0 1 (face tree-sitter-hl-face:keyword wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 1 2 (face tree-sitter-hl-face:keyword wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 2 3 (face tree-sitter-hl-face:keyword wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 3 4 (face tree-sitter-hl-face:keyword wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 4 5 (face tree-sitter-hl-face:keyword wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 5 6 (face tree-sitter-hl-face:keyword wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 6 7 (wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 7 8 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 8 9 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 9 10 (face tree-sitter-hl-face:type wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 10 11 (wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 11 12 (wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 12 13 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 13 14 (wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 14 15 (wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 15 16 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) wrap-prefix #("	  " 0 1 (fontified t)) fontified t) 16 17 (face tree-sitter-hl-face:punctuation.delimiter wrap-prefix #("	  " 0 1 (fontified t)) fontified t)) . 36) (undo-tree-id1647 . -10) (undo-tree-id1648 . -9) (undo-tree-id1649 . -9) (undo-tree-id1650 . -9) (undo-tree-id1651 . -9) (undo-tree-id1652 . -9) (undo-tree-id1653 . -9) (undo-tree-id1654 . -9) (undo-tree-id1655 . -9) (undo-tree-id1656 . -9) (undo-tree-id1657 . -9) (undo-tree-id1658 . -9) (undo-tree-id1659 . -9) (undo-tree-id1660 . -9) (undo-tree-id1661 . -9) (undo-tree-id1662 . -9) (undo-tree-id1663 . -9) (undo-tree-id1664 . -9) (undo-tree-id1665 . -9) (undo-tree-id1666 . -9) (undo-tree-id1667 . -9) (undo-tree-id1668 . -9) (undo-tree-id1669 . -9) (undo-tree-id1670 . -10) (undo-tree-id1671 . -9) (undo-tree-id1672 . -10) (undo-tree-id1673 . -10) (undo-tree-id1674 . -10) (undo-tree-id1675 . -10) (undo-tree-id1676 . -10) (undo-tree-id1677 . -10) (undo-tree-id1678 . -10) (undo-tree-id1679 . -10) (undo-tree-id1680 . -10) (undo-tree-id1681 . 7) (undo-tree-id1682 . -12) (undo-tree-id1683 . -10) (undo-tree-id1684 . -12) (undo-tree-id1685 . -12) (undo-tree-id1686 . -12) (undo-tree-id1687 . -12) (undo-tree-id1688 . -12) (undo-tree-id1689 . -12) (undo-tree-id1690 . -12) (undo-tree-id1691 . -12) (undo-tree-id1692 . -13) (undo-tree-id1693 . -12) (undo-tree-id1694 . -13) (undo-tree-id1695 . -13) (undo-tree-id1696 . -13) (undo-tree-id1697 . -13) (undo-tree-id1698 . -13) (undo-tree-id1699 . -13) (undo-tree-id1700 . -13) (undo-tree-id1701 . -13) (undo-tree-id1702 . -13) (undo-tree-id1703 . -13) (undo-tree-id1704 . -13) (undo-tree-id1705 . 3) (undo-tree-id1706 . 4) (undo-tree-id1707 . -14) (undo-tree-id1708 . -13) (undo-tree-id1709 . -14) (undo-tree-id1710 . -14) (undo-tree-id1711 . -14) (undo-tree-id1712 . -14) (undo-tree-id1713 . -14) (undo-tree-id1714 . -14) (undo-tree-id1715 . -14) (undo-tree-id1716 . -14) (undo-tree-id1717 . -14) (undo-tree-id1718 . -14) (undo-tree-id1719 . -14) (undo-tree-id1720 . -14) (undo-tree-id1721 . -14) (undo-tree-id1722 . -14) (undo-tree-id1723 . -14) (undo-tree-id1724 . -14) (undo-tree-id1725 . -14) (undo-tree-id1726 . -14) (undo-tree-id1727 . -14) (undo-tree-id1728 . -14) (undo-tree-id1729 . -14) (undo-tree-id1730 . -14) (undo-tree-id1731 . -16) (undo-tree-id1732 . -15) (undo-tree-id1733 . -14) (undo-tree-id1734 . -15) (undo-tree-id1735 . -15) (undo-tree-id1736 . -15) (undo-tree-id1737 . -15) (undo-tree-id1738 . -15) (undo-tree-id1739 . -15) (undo-tree-id1740 . -15) (undo-tree-id1741 . -15) (undo-tree-id1742 . -15) (undo-tree-id1743 . -15) (undo-tree-id1744 . -15) (undo-tree-id1745 . -16) (undo-tree-id1746 . -15) (undo-tree-id1747 . -16) (undo-tree-id1748 . -16) (undo-tree-id1749 . -16) (undo-tree-id1750 . -16) (undo-tree-id1751 . -16) (undo-tree-id1752 . -16) (undo-tree-id1753 . -17) (undo-tree-id1754 . -16) (undo-tree-id1755 . -17) (undo-tree-id1756 . -17) (undo-tree-id1757 . -17) (undo-tree-id1758 . -17) (undo-tree-id1759 . -17) (undo-tree-id1760 . -17) (undo-tree-id1761 . -17) (undo-tree-id1762 . -17) (undo-tree-id1763 . -16) (undo-tree-id1764 . -16) (undo-tree-id1765 . -16) (undo-tree-id1766 . -16) (undo-tree-id1767 . -16) (undo-tree-id1768 . -16) (undo-tree-id1769 . -16) (undo-tree-id1770 . -16) (undo-tree-id1771 . -16) (undo-tree-id1772 . -16) (undo-tree-id1773 . -12) (undo-tree-id1774 . -16) (undo-tree-id1775 . -12) (undo-tree-id1776 . -12) (undo-tree-id1777 . -16) (undo-tree-id1778 . -12) (undo-tree-id1779 . -16) (undo-tree-id1780 . -16) (undo-tree-id1781 . -16) (undo-tree-id1782 . -16) (undo-tree-id1783 . -16) (undo-tree-id1784 . -16) (undo-tree-id1785 . -13) (undo-tree-id1786 . -16) (undo-tree-id1787 . -1) (undo-tree-id1788 . -13) (undo-tree-id1789 . -1)) nil (26026 42105 575995 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . -46) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) 47 (46 . 47) (44 . 46) (36 . 44) (35 . 36) (#("	" 0 1 (wrap-prefix #("	  " 0 1 (fontified nil)) fontified t)) . 35) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1)) nil (26026 42105 575848 0) 0 nil])
([nil nil ((51 . 56) (#(" " 0 1 (fontified t wrap-prefix #("	  " 0 1 (fontified t)) c-<>-c-types-set t)) . -51) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) 52 (46 . 52) (#("C" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix #("	  " 0 1 (fontified t)) c-<>-c-types-set t)) . -46) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) 47 (45 . 47)) nil (26026 42105 575637 0) 0 nil])
([nil nil ((55 . 56)) nil (26026 42105 575606 0) 0 nil])
([nil nil ((#("s" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . -70) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) 71 (70 . 71) (69 . 70) (58 . 69)) nil (26026 42105 575604 0) 0 nil])
([nil nil ((71 . 72) (70 . 72) (69 . 70)) nil (26026 42105 575585 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . -75) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 76 (75 . 76) (75 . 76) 92) nil (26026 42105 575583 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -101) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) 102 (100 . 102) 99) nil (26026 42105 575569 0) 0 nil])
([nil nil ((103 . 111) (101 . 103) (100 . 101)) nil (26026 42105 575556 0) 0 nil])
([nil nil ((117 . 125) (115 . 117) (114 . 115)) nil (26026 42105 575554 0) 0 nil])
([nil nil ((84 . 86) (76 . 84) (#("templte" 0 1 (face tree-sitter-hl-face:type fontified t) 1 2 (face tree-sitter-hl-face:type fontified t) 2 3 (face tree-sitter-hl-face:type fontified t) 3 4 (face tree-sitter-hl-face:type fontified t) 4 5 (face tree-sitter-hl-face:type fontified t) 5 6 (face tree-sitter-hl-face:type fontified t) 6 7 (face tree-sitter-hl-face:type fontified t)) . -76) (undo-tree-id1345 . -7) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -2) (undo-tree-id1353 . -1) (undo-tree-id1354 . -2) (undo-tree-id1355 . -2) (undo-tree-id1356 . -2) (undo-tree-id1357 . -2) (undo-tree-id1358 . -2) (undo-tree-id1359 . -3) (undo-tree-id1360 . -2) (undo-tree-id1361 . -3) (undo-tree-id1362 . -3) (undo-tree-id1363 . -3) (undo-tree-id1364 . -3) (undo-tree-id1365 . -4) (undo-tree-id1366 . -3) (undo-tree-id1367 . -4) (undo-tree-id1368 . -4) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -4) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -5) (undo-tree-id1375 . -4) (undo-tree-id1376 . -5) (undo-tree-id1377 . -5) (undo-tree-id1378 . -5) (undo-tree-id1379 . -5) (undo-tree-id1380 . -5) (undo-tree-id1381 . -5) (undo-tree-id1382 . -5) (undo-tree-id1383 . -5) (undo-tree-id1384 . -6) (undo-tree-id1385 . -5) (undo-tree-id1386 . -6) (undo-tree-id1387 . -6) (undo-tree-id1388 . -6) (undo-tree-id1389 . -6) (undo-tree-id1390 . -6) (undo-tree-id1391 . -6) (undo-tree-id1392 . -6) (undo-tree-id1393 . -6) (undo-tree-id1394 . -7) (undo-tree-id1395 . -6) (undo-tree-id1396 . -7) (undo-tree-id1397 . -7) (undo-tree-id1398 . -7) (undo-tree-id1399 . -7) (undo-tree-id1400 . -7) (undo-tree-id1401 . -7) (undo-tree-id1402 . -7) (undo-tree-id1403 . -7) (undo-tree-id1404 . -7) (undo-tree-id1405 . -7) (undo-tree-id1406 . -7) (undo-tree-id1407 . -7) (undo-tree-id1408 . -7) (undo-tree-id1409 . -7) (undo-tree-id1410 . -7) (undo-tree-id1411 . -7) (undo-tree-id1412 . -7) (undo-tree-id1413 . -7) (undo-tree-id1414 . -7) 83 (76 . 83) (74 . 76) 43) nil (26026 42105 575549 0) 0 nil])
([nil nil ((91 . 97) (#(" " 0 1 (fontified t)) . -91) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (#("T" 0 1 (face tree-sitter-hl-face:type fontified t)) . -92) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) 93 (92 . 93) (85 . 92)) nil (26026 42105 575472 0) 0 nil])
([nil nil ((107 . 111) (#("d" 0 1 (face tree-sitter-hl-face:type fontified t)) . -107) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (#("o" 0 1 (face tree-sitter-hl-face:type fontified t)) . -108) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) 109 (98 . 109)) nil (26026 42105 575412 0) 0 nil])
([nil nil ((112 . 113) (111 . 113) (#(" " 0 1 (fontified t)) . -111) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) 112 (#("{" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified nil)) . -112) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (#("}" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified t)) . 113) (112 . 114) (111 . 112)) nil (26026 42105 575356 0) 0 nil])
([nil nil ((114 . 115)) nil (26026 42105 575305 0) 0 nil])
([nil nil ((125 . 127) (117 . 125) (115 . 117) 106) nil (26026 42105 575304 0) 0 nil])
([nil nil ((126 . 127)) nil (26026 42105 575302 0) 0 nil])
([nil nil ((134 . 136) (127 . 134) (#("class" 0 1 (face tree-sitter-hl-face:keyword fontified t) 1 2 (face tree-sitter-hl-face:keyword fontified t) 2 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (face tree-sitter-hl-face:keyword fontified t)) . -127) (undo-tree-id1053 . -5) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -2) (undo-tree-id1064 . -1) (undo-tree-id1065 . -2) (undo-tree-id1066 . -2) (undo-tree-id1067 . -2) (undo-tree-id1068 . -2) (undo-tree-id1069 . -2) (undo-tree-id1070 . -2) (undo-tree-id1071 . -3) (undo-tree-id1072 . -2) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (undo-tree-id1079 . -3) (undo-tree-id1080 . -3) (undo-tree-id1081 . -4) (undo-tree-id1082 . -3) (undo-tree-id1083 . -4) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -5) (undo-tree-id1092 . -4) (undo-tree-id1093 . -5) (undo-tree-id1094 . -5) (undo-tree-id1095 . -5) (undo-tree-id1096 . -5) (undo-tree-id1097 . -5) (undo-tree-id1098 . -5) (undo-tree-id1099 . -5) (undo-tree-id1100 . -5) (undo-tree-id1101 . -5) (undo-tree-id1102 . -5) (undo-tree-id1103 . -5) (undo-tree-id1104 . -5) (undo-tree-id1105 . -5) (undo-tree-id1106 . -5) (undo-tree-id1107 . -5) (undo-tree-id1108 . -5) (undo-tree-id1109 . -5) 132 (127 . 132) (#("class" 0 1 (face tree-sitter-hl-face:keyword fontified t) 1 2 (face tree-sitter-hl-face:keyword fontified t) 2 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (face tree-sitter-hl-face:keyword fontified t)) . -127) (undo-tree-id1110 . -5) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -2) (undo-tree-id1119 . -1) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -3) (undo-tree-id1124 . -2) (undo-tree-id1125 . -3) (undo-tree-id1126 . -3) (undo-tree-id1127 . -3) (undo-tree-id1128 . -3) (undo-tree-id1129 . -3) (undo-tree-id1130 . -3) (undo-tree-id1131 . -3) (undo-tree-id1132 . -3) (undo-tree-id1133 . -4) (undo-tree-id1134 . -3) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -5) (undo-tree-id1144 . -4) (undo-tree-id1145 . -5) (undo-tree-id1146 . -5) (undo-tree-id1147 . -5) (undo-tree-id1148 . -5) (undo-tree-id1149 . -5) (undo-tree-id1150 . -5) (undo-tree-id1151 . -5) (undo-tree-id1152 . -5) (undo-tree-id1153 . -5) (undo-tree-id1154 . -5) (undo-tree-id1155 . -5) (undo-tree-id1156 . -5) (undo-tree-id1157 . -5) (undo-tree-id1158 . -5) (undo-tree-id1159 . -5) (undo-tree-id1160 . -5) (undo-tree-id1161 . -5) (undo-tree-id1162 . -5) (undo-tree-id1163 . -5) (undo-tree-id1164 . -5) (undo-tree-id1165 . -5) (undo-tree-id1166 . -5) (undo-tree-id1167 . -5) (undo-tree-id1168 . -5) (undo-tree-id1169 . -5) (undo-tree-id1170 . -5) (undo-tree-id1171 . -5) (undo-tree-id1172 . -5) (undo-tree-id1173 . -5) (undo-tree-id1174 . -5) (undo-tree-id1175 . -5) (undo-tree-id1176 . -5) (undo-tree-id1177 . -5) 132 (#(" " 0 1 (fontified t)) . -132) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) 133 (126 . 133)) nil (26026 42105 575295 0) 0 nil])
([nil nil ((151 . 152) (150 . 152) (146 . 150) (#("S" 0 1 (face tree-sitter-hl-face:type fontified t)) . -146) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (#("t" 0 1 (face tree-sitter-hl-face:type fontified t)) . -147) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("r" 0 1 (face tree-sitter-hl-face:type fontified t)) . -148) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) 149 (138 . 149)) nil (26026 42105 575108 0) 0 nil])
([nil nil ((153 . 154)) nil (26026 42105 574993 0) 0 nil])
([nil nil ((44 . 46) (36 . 44) (35 . 36) (35 . 36) 52) nil (26026 42105 574992 0) 0 nil])
([nil nil ((46 . 56) (#("class" 0 1 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 1 2 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 2 3 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 3 4 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 4 5 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ")) . -46) (undo-tree-id852 . -5) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -2) (undo-tree-id863 . -1) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (undo-tree-id868 . -2) (undo-tree-id869 . -3) (undo-tree-id870 . -2) (undo-tree-id871 . -3) (undo-tree-id872 . -3) (undo-tree-id873 . -3) (undo-tree-id874 . -3) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -4) (undo-tree-id879 . -3) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -5) (undo-tree-id887 . -4) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -5) (undo-tree-id891 . -5) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -5) (undo-tree-id895 . -5) (undo-tree-id896 . -5) (undo-tree-id897 . -5) (undo-tree-id898 . -5) (undo-tree-id899 . -5) (undo-tree-id900 . -5) (undo-tree-id901 . -5) (undo-tree-id902 . -5) (undo-tree-id903 . -5) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -5) (undo-tree-id907 . -5) (undo-tree-id908 . -5) (undo-tree-id909 . -5) (undo-tree-id910 . -5) (undo-tree-id911 . -5) (undo-tree-id912 . -5) (undo-tree-id913 . -5) (undo-tree-id914 . -5) (undo-tree-id915 . -5) (undo-tree-id916 . -5) (undo-tree-id917 . -5) (undo-tree-id918 . -5) (undo-tree-id919 . -5) (undo-tree-id920 . -5) 51 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -51) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) 52 (45 . 52)) nil (26026 42105 574985 0) 0 nil])
([nil nil ((57 . 58)) nil (26026 42105 574902 0) 0 nil])
([nil nil ((#("sstribg" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 1 2 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 2 3 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 3 4 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 4 5 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 5 6 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 6 7 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ")) . -67) (undo-tree-id674 . -7) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -2) (undo-tree-id691 . -1) (undo-tree-id692 . -2) (undo-tree-id693 . -2) (undo-tree-id694 . -2) (undo-tree-id695 . -3) (undo-tree-id696 . -2) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3) (undo-tree-id700 . -3) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -3) (undo-tree-id704 . -4) (undo-tree-id705 . -3) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -5) (undo-tree-id715 . -4) (undo-tree-id716 . -5) (undo-tree-id717 . -5) (undo-tree-id718 . -5) (undo-tree-id719 . -5) (undo-tree-id720 . -5) (undo-tree-id721 . -5) (undo-tree-id722 . -5) (undo-tree-id723 . -5) (undo-tree-id724 . -6) (undo-tree-id725 . -5) (undo-tree-id726 . -6) (undo-tree-id727 . -6) (undo-tree-id728 . -6) (undo-tree-id729 . -7) (undo-tree-id730 . -6) (undo-tree-id731 . -7) (undo-tree-id732 . -7) (undo-tree-id733 . -7) (undo-tree-id734 . -7) (undo-tree-id735 . -7) (undo-tree-id736 . -7) (undo-tree-id737 . -7) (undo-tree-id738 . -7) (undo-tree-id739 . -7) (undo-tree-id740 . -7) (undo-tree-id741 . -7) (undo-tree-id742 . -7) (undo-tree-id743 . -7) (undo-tree-id744 . -7) (undo-tree-id745 . -7) (undo-tree-id746 . -7) (undo-tree-id747 . -7) 74 (67 . 74) (#("S" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ")) . -67) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) 68 (66 . 68) (#("String" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 1 2 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 2 3 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 3 4 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 4 5 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 5 6 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ")) . -66) (undo-tree-id766 . -6) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -2) (undo-tree-id777 . -1) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -3) (undo-tree-id785 . -2) (undo-tree-id786 . -3) (undo-tree-id787 . -3) (undo-tree-id788 . -3) (undo-tree-id789 . -4) (undo-tree-id790 . -3) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -5) (undo-tree-id798 . -4) (undo-tree-id799 . -5) (undo-tree-id800 . -5) (undo-tree-id801 . -5) (undo-tree-id802 . -5) (undo-tree-id803 . -5) (undo-tree-id804 . -5) (undo-tree-id805 . -6) (undo-tree-id806 . -5) (undo-tree-id807 . -6) (undo-tree-id808 . -6) (undo-tree-id809 . -6) (undo-tree-id810 . -6) (undo-tree-id811 . -6) (undo-tree-id812 . -6) (undo-tree-id813 . -6) (undo-tree-id814 . -6) (undo-tree-id815 . -6) (undo-tree-id816 . -6) (undo-tree-id817 . -6) (undo-tree-id818 . -6) (undo-tree-id819 . -6) (undo-tree-id820 . -6) (undo-tree-id821 . -6) (undo-tree-id822 . -6) (undo-tree-id823 . -6) (undo-tree-id824 . -6) (undo-tree-id825 . -6) (undo-tree-id826 . -6) (undo-tree-id827 . -6) (undo-tree-id828 . -6) (undo-tree-id829 . -6) (undo-tree-id830 . -6) (undo-tree-id831 . -6) (undo-tree-id832 . -6) (undo-tree-id833 . -6) (undo-tree-id834 . -6) (undo-tree-id835 . -6) (undo-tree-id836 . -6) 72 (#(";" 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified t wrap-prefix "  ")) . -72) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) 73 (72 . 73) (61 . 72) (58 . 61)) nil (26026 42105 580585 0) 0 nil])
([nil nil ((78 . 80) (66 . 78) (#("S" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ")) . -66) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (#("t" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ")) . -67) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) 68 (66 . 68) (#("_" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ")) . -66) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) 67) nil (26026 42141 97578 0) 0 nil] [nil nil ((#("	template< char...cs >  struct _
" 0 1 (fontified t wrap-prefix "  ") 1 2 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 2 3 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 3 4 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 4 5 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 5 6 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 6 7 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 7 8 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 8 9 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 9 10 (face tree-sitter-hl-face:operator fontified t category c-<-as-paren-syntax c-<>-c-types-set t wrap-prefix "  ") 10 11 (fontified t wrap-prefix "  ") 11 12 (face tree-sitter-hl-face:type.builtin fontified t wrap-prefix "  ") 12 13 (face tree-sitter-hl-face:type.builtin fontified t wrap-prefix "  ") 13 14 (face tree-sitter-hl-face:type.builtin fontified t wrap-prefix "  ") 14 15 (face tree-sitter-hl-face:type.builtin fontified t wrap-prefix "  ") 15 16 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 16 17 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 17 18 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 18 19 (fontified t wrap-prefix "  ") 19 20 (fontified t wrap-prefix "  ") 20 21 (fontified t wrap-prefix "  ") 21 22 (face tree-sitter-hl-face:operator fontified t category c->-as-paren-syntax wrap-prefix "  ") 22 23 (fontified t wrap-prefix "  ") 23 24 (fontified t wrap-prefix "  ") 24 25 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 25 26 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 26 27 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 27 28 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 28 29 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 29 30 (face tree-sitter-hl-face:keyword fontified t wrap-prefix "  ") 30 31 (fontified t wrap-prefix "  ") 31 32 (face tree-sitter-hl-face:type fontified t wrap-prefix "  ") 32 33 (fontified t)) . 35) (undo-tree-id0 . -32) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -2) (undo-tree-id10 . -1) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -3) (undo-tree-id17 . -2) (undo-tree-id18 . -3) (undo-tree-id19 . -3) (undo-tree-id20 . -3) (undo-tree-id21 . -4) (undo-tree-id22 . -3) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -5) (undo-tree-id31 . -4) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -6) (undo-tree-id38 . -5) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (undo-tree-id44 . -7) (undo-tree-id45 . -6) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -8) (undo-tree-id50 . -7) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -9) (undo-tree-id57 . -8) (undo-tree-id58 . -9) (undo-tree-id59 . -9) (undo-tree-id60 . -9) (undo-tree-id61 . -9) (undo-tree-id62 . -9) (undo-tree-id63 . -9) (undo-tree-id64 . -9) (undo-tree-id65 . -9) (undo-tree-id66 . -9) (undo-tree-id67 . -9) (undo-tree-id68 . -9) (undo-tree-id69 . -9) (undo-tree-id70 . -10) (undo-tree-id71 . -9) (undo-tree-id72 . -10) (undo-tree-id73 . -9) (undo-tree-id74 . -10) (undo-tree-id75 . -22) (undo-tree-id76 . -10) (undo-tree-id77 . -22) (undo-tree-id78 . -9) (undo-tree-id79 . -22) (undo-tree-id80 . -22) (undo-tree-id81 . -22) (undo-tree-id82 . -22) (undo-tree-id83 . -22) (undo-tree-id84 . -22) (undo-tree-id85 . -22) (undo-tree-id86 . -22) (undo-tree-id87 . -22) (undo-tree-id88 . -22) (undo-tree-id89 . -22) (undo-tree-id90 . -22) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . -10) (undo-tree-id94 . -10) (undo-tree-id95 . -10) (undo-tree-id96 . -10) (undo-tree-id97 . -10) (undo-tree-id98 . -10) (undo-tree-id99 . -10) (undo-tree-id100 . -10) (undo-tree-id101 . -11) (undo-tree-id102 . -10) (undo-tree-id103 . -9) (undo-tree-id104 . -11) (undo-tree-id105 . -11) (undo-tree-id106 . -11) (undo-tree-id107 . -11) (undo-tree-id108 . -11) (undo-tree-id109 . -11) (undo-tree-id110 . -11) (undo-tree-id111 . -11) (undo-tree-id112 . -11) (undo-tree-id113 . -11) (undo-tree-id114 . -9) (undo-tree-id115 . -11) (undo-tree-id116 . -11) (undo-tree-id117 . -11) (undo-tree-id118 . -11) (undo-tree-id119 . -11) (undo-tree-id120 . -11) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -9) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -11) (undo-tree-id131 . -11) (undo-tree-id132 . -11) (undo-tree-id133 . -9) (undo-tree-id134 . -11) (undo-tree-id135 . -11) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -11) (undo-tree-id139 . -11) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -9) (undo-tree-id144 . -11) (undo-tree-id145 . -11) (undo-tree-id146 . -11) (undo-tree-id147 . -11) (undo-tree-id148 . -11) (undo-tree-id149 . -11) (undo-tree-id150 . -11) (undo-tree-id151 . -11) (undo-tree-id152 . -9) (undo-tree-id153 . -11) (undo-tree-id154 . -11) (undo-tree-id155 . -11) (undo-tree-id156 . -11) (undo-tree-id157 . -11) (undo-tree-id158 . -11) (undo-tree-id159 . -11) (undo-tree-id160 . -11) (undo-tree-id161 . -11) (undo-tree-id162 . -11) (undo-tree-id163 . -9) (undo-tree-id164 . -11) (undo-tree-id165 . -11) (undo-tree-id166 . -11) (undo-tree-id167 . -11) (undo-tree-id168 . -11) (undo-tree-id169 . -11) (undo-tree-id170 . -11) (undo-tree-id171 . -11) (undo-tree-id172 . -11) (undo-tree-id173 . -9) (undo-tree-id174 . -11) (undo-tree-id175 . -11) (undo-tree-id176 . -11) (undo-tree-id177 . -11) (undo-tree-id178 . -11) (undo-tree-id179 . -11) (undo-tree-id180 . -11) (undo-tree-id181 . -9) (undo-tree-id182 . -11) (undo-tree-id183 . -11) (undo-tree-id184 . -11) (undo-tree-id185 . -11) (undo-tree-id186 . -11) (undo-tree-id187 . -11) (undo-tree-id188 . -11) (undo-tree-id189 . -11) (undo-tree-id190 . -9) (undo-tree-id191 . -11) (undo-tree-id192 . -11) (undo-tree-id193 . -11) (undo-tree-id194 . -11) (undo-tree-id195 . -11) (undo-tree-id196 . -11) (undo-tree-id197 . -12) (undo-tree-id198 . -11) (undo-tree-id199 . -9) (undo-tree-id200 . -12) (undo-tree-id201 . -12) (undo-tree-id202 . -12) (undo-tree-id203 . -12) (undo-tree-id204 . -12) (undo-tree-id205 . -12) (undo-tree-id206 . -13) (undo-tree-id207 . -12) (undo-tree-id208 . -9) (undo-tree-id209 . -13) (undo-tree-id210 . -13) (undo-tree-id211 . -13) (undo-tree-id212 . -13) (undo-tree-id213 . -13) (undo-tree-id214 . -14) (undo-tree-id215 . -13) (undo-tree-id216 . -9) (undo-tree-id217 . -14) (undo-tree-id218 . -14) (undo-tree-id219 . -14) (undo-tree-id220 . -14) (undo-tree-id221 . -14) (undo-tree-id222 . -14) (undo-tree-id223 . -14) (undo-tree-id224 . -15) (undo-tree-id225 . -14) (undo-tree-id226 . -9) (undo-tree-id227 . -15) (undo-tree-id228 . -15) (undo-tree-id229 . -15) (undo-tree-id230 . -15) (undo-tree-id231 . -15) (undo-tree-id232 . -15) (undo-tree-id233 . -15) (undo-tree-id234 . -15) (undo-tree-id235 . -15) (undo-tree-id236 . -15) (undo-tree-id237 . -15) (undo-tree-id238 . -15) (undo-tree-id239 . -15) (undo-tree-id240 . -9) (undo-tree-id241 . -15) (undo-tree-id242 . -15) (undo-tree-id243 . -15) (undo-tree-id244 . -16) (undo-tree-id245 . -15) (undo-tree-id246 . -16) (undo-tree-id247 . -9) (undo-tree-id248 . -16) (undo-tree-id249 . -16) (undo-tree-id250 . -16) (undo-tree-id251 . -16) (undo-tree-id252 . -16) (undo-tree-id253 . -16) (undo-tree-id254 . -17) (undo-tree-id255 . -16) (undo-tree-id256 . -9) (undo-tree-id257 . -17) (undo-tree-id258 . -17) (undo-tree-id259 . -17) (undo-tree-id260 . -17) (undo-tree-id261 . -17) (undo-tree-id262 . -17) (undo-tree-id263 . -17) (undo-tree-id264 . -17) (undo-tree-id265 . -18) (undo-tree-id266 . -17) (undo-tree-id267 . -9) (undo-tree-id268 . -18) (undo-tree-id269 . -18) (undo-tree-id270 . -18) (undo-tree-id271 . -18) (undo-tree-id272 . -18) (undo-tree-id273 . -18) (undo-tree-id274 . -18) (undo-tree-id275 . -18) (undo-tree-id276 . -18) (undo-tree-id277 . -18) (undo-tree-id278 . -18) (undo-tree-id279 . -18) (undo-tree-id280 . -18) (undo-tree-id281 . -9) (undo-tree-id282 . -18) (undo-tree-id283 . -19) (undo-tree-id284 . -18) (undo-tree-id285 . -19) (undo-tree-id286 . -9) (undo-tree-id287 . -19) (undo-tree-id288 . -19) (undo-tree-id289 . -19) (undo-tree-id290 . -20) (undo-tree-id291 . -19) (undo-tree-id292 . -9) (undo-tree-id293 . -20) (undo-tree-id294 . -20) (undo-tree-id295 . -20) (undo-tree-id296 . -20) (undo-tree-id297 . -20) (undo-tree-id298 . -20) (undo-tree-id299 . -20) (undo-tree-id300 . -20) (undo-tree-id301 . -21) (undo-tree-id302 . -20) (undo-tree-id303 . -9) (undo-tree-id304 . -21) (undo-tree-id305 . -21) (undo-tree-id306 . -21) (undo-tree-id307 . -21) (undo-tree-id308 . -21) (undo-tree-id309 . -21) (undo-tree-id310 . -21) (undo-tree-id311 . -21) (undo-tree-id312 . -20) (undo-tree-id313 . -20) (undo-tree-id314 . -20) (undo-tree-id315 . -20) (undo-tree-id316 . -20) (undo-tree-id317 . -20) (undo-tree-id318 . -21) (undo-tree-id319 . -20) (undo-tree-id320 . -22) (undo-tree-id321 . -21) (undo-tree-id322 . -22) (undo-tree-id323 . -22) (undo-tree-id324 . -23) (undo-tree-id325 . -22) (undo-tree-id326 . -9) (undo-tree-id327 . -23) (undo-tree-id328 . -23) (undo-tree-id329 . -23) (undo-tree-id330 . -23) (undo-tree-id331 . -23) (undo-tree-id332 . -23) (undo-tree-id333 . -23) (undo-tree-id334 . -23) (undo-tree-id335 . -23) (undo-tree-id336 . -9) (undo-tree-id337 . -23) (undo-tree-id338 . -23) (undo-tree-id339 . -23) (undo-tree-id340 . -23) (undo-tree-id341 . -23) (undo-tree-id342 . -22) (undo-tree-id343 . -22) (undo-tree-id344 . -22) (undo-tree-id345 . -22) (undo-tree-id346 . -22) (undo-tree-id347 . -22) (undo-tree-id348 . -23) (undo-tree-id349 . -22) (undo-tree-id350 . -23) (undo-tree-id351 . -23) (undo-tree-id352 . -24) (undo-tree-id353 . -23) (undo-tree-id354 . -9) (undo-tree-id355 . -24) (undo-tree-id356 . -24) (undo-tree-id357 . -24) (undo-tree-id358 . -24) (undo-tree-id359 . -24) (undo-tree-id360 . -24) (undo-tree-id361 . -24) (undo-tree-id362 . -24) (undo-tree-id363 . -25) (undo-tree-id364 . -24) (undo-tree-id365 . -9) (undo-tree-id366 . -25) (undo-tree-id367 . -25) (undo-tree-id368 . -25) (undo-tree-id369 . -26) (undo-tree-id370 . -25) (undo-tree-id371 . -9) (undo-tree-id372 . -26) (undo-tree-id373 . -26) (undo-tree-id374 . -26) (undo-tree-id375 . -26) (undo-tree-id376 . -26) (undo-tree-id377 . -27) (undo-tree-id378 . -26) (undo-tree-id379 . -9) (undo-tree-id380 . -27) (undo-tree-id381 . -27) (undo-tree-id382 . -27) (undo-tree-id383 . -27) (undo-tree-id384 . -27) (undo-tree-id385 . -27) (undo-tree-id386 . -27) (undo-tree-id387 . -28) (undo-tree-id388 . -27) (undo-tree-id389 . -9) (undo-tree-id390 . -28) (undo-tree-id391 . -28) (undo-tree-id392 . -28) (undo-tree-id393 . -28) (undo-tree-id394 . -28) (undo-tree-id395 . -29) (undo-tree-id396 . -28) (undo-tree-id397 . -9) (undo-tree-id398 . -29) (undo-tree-id399 . -29) (undo-tree-id400 . -29) (undo-tree-id401 . -29) (undo-tree-id402 . -29) (undo-tree-id403 . -29) (undo-tree-id404 . -29) (undo-tree-id405 . -30) (undo-tree-id406 . -29) (undo-tree-id407 . -9) (undo-tree-id408 . -30) (undo-tree-id409 . -30) (undo-tree-id410 . -30) (undo-tree-id411 . -30) (undo-tree-id412 . -30) (undo-tree-id413 . -30) (undo-tree-id414 . -30) (undo-tree-id415 . -30) (undo-tree-id416 . -31) (undo-tree-id417 . -30) (undo-tree-id418 . -9) (undo-tree-id419 . -31) (undo-tree-id420 . -31) (undo-tree-id421 . -31) (undo-tree-id422 . -31) (undo-tree-id423 . -31) (undo-tree-id424 . -31) (undo-tree-id425 . -31) (undo-tree-id426 . -31) (undo-tree-id427 . -31) (undo-tree-id428 . -31) (undo-tree-id429 . -9) (undo-tree-id430 . -31) (undo-tree-id431 . -31) (undo-tree-id432 . -31) (undo-tree-id433 . -31) (undo-tree-id434 . -31) (undo-tree-id435 . -31) (undo-tree-id436 . -31) (undo-tree-id437 . -31) (undo-tree-id438 . -31) (undo-tree-id439 . -31) (undo-tree-id440 . -9) (undo-tree-id441 . -31) (undo-tree-id442 . -31) (undo-tree-id443 . -31) (undo-tree-id444 . -31) (undo-tree-id445 . -31) (undo-tree-id446 . -31) (undo-tree-id447 . -31) (undo-tree-id448 . -31) (undo-tree-id449 . -9) (undo-tree-id450 . -31) (undo-tree-id451 . -31) (undo-tree-id452 . -31) (undo-tree-id453 . -31) (undo-tree-id454 . -31) (undo-tree-id455 . -9) (undo-tree-id456 . -31) (undo-tree-id457 . -31) (undo-tree-id458 . -31) (undo-tree-id459 . -31) (undo-tree-id460 . -31) (undo-tree-id461 . -31) (undo-tree-id462 . -31) (undo-tree-id463 . -31) (undo-tree-id464 . -9) (undo-tree-id465 . -31) (undo-tree-id466 . -31) (undo-tree-id467 . -31) (undo-tree-id468 . -31) (undo-tree-id469 . -31) (undo-tree-id470 . -31) (undo-tree-id471 . -31) (undo-tree-id472 . -31) (undo-tree-id473 . -9) (undo-tree-id474 . -31) (undo-tree-id475 . -31) (undo-tree-id476 . -31) (undo-tree-id477 . -31) (undo-tree-id478 . -31) (undo-tree-id479 . -31) (undo-tree-id480 . -31) (undo-tree-id481 . -31) (undo-tree-id482 . -31) (undo-tree-id483 . -31) (undo-tree-id484 . -9) (undo-tree-id485 . -31) (undo-tree-id486 . -31) (undo-tree-id487 . -31) (undo-tree-id488 . -31) (undo-tree-id489 . -31) (undo-tree-id490 . -31) (undo-tree-id491 . -31) (undo-tree-id492 . -31) (undo-tree-id493 . -31) (undo-tree-id494 . -9) (undo-tree-id495 . -31) (undo-tree-id496 . -31) (undo-tree-id497 . -31) (undo-tree-id498 . -31) (undo-tree-id499 . -31) (undo-tree-id500 . -9) (undo-tree-id501 . -31) (undo-tree-id502 . -31) (undo-tree-id503 . -31) (undo-tree-id504 . -31) (undo-tree-id505 . -31) (undo-tree-id506 . -31) (undo-tree-id507 . -31) (undo-tree-id508 . -9) (undo-tree-id509 . -31) (undo-tree-id510 . -31) (undo-tree-id511 . -31) (undo-tree-id512 . -31) (undo-tree-id513 . -31) (undo-tree-id514 . -31) (undo-tree-id515 . -31) (undo-tree-id516 . -9) (undo-tree-id517 . -31) (undo-tree-id518 . -31) (undo-tree-id519 . -31) (undo-tree-id520 . -31) (undo-tree-id521 . -31) (undo-tree-id522 . -32) (undo-tree-id523 . -31) (undo-tree-id524 . -9) (undo-tree-id525 . -32) (undo-tree-id526 . -32) (undo-tree-id527 . -32) (undo-tree-id528 . -32) (undo-tree-id529 . -32) (undo-tree-id530 . -32) (undo-tree-id531 . -32) (undo-tree-id532 . -9) (undo-tree-id533 . -32) (undo-tree-id534 . -32) (undo-tree-id535 . -32) (undo-tree-id536 . -9) (undo-tree-id537 . -32) (undo-tree-id538 . -32) (undo-tree-id539 . -32) (undo-tree-id540 . -32) (undo-tree-id541 . -32) (undo-tree-id542 . -32) (undo-tree-id543 . -32) (undo-tree-id544 . -32) (undo-tree-id545 . -32) (undo-tree-id546 . -9) (undo-tree-id547 . -32) (undo-tree-id548 . -32) (undo-tree-id549 . -32) (undo-tree-id550 . -32) (undo-tree-id551 . -32) (undo-tree-id552 . -32) (undo-tree-id553 . -32) (undo-tree-id554 . -32) (undo-tree-id555 . -9) (undo-tree-id556 . -32) (undo-tree-id557 . -32) (undo-tree-id558 . -32) (undo-tree-id559 . -32) (undo-tree-id560 . -32) (undo-tree-id561 . -32) (undo-tree-id562 . -32) (undo-tree-id563 . -32) (undo-tree-id564 . -9) (undo-tree-id565 . -32) (undo-tree-id566 . -32) (undo-tree-id567 . -32) (undo-tree-id568 . -32) (undo-tree-id569 . -32) (undo-tree-id570 . -32) (undo-tree-id571 . -32) (undo-tree-id572 . -32) (undo-tree-id573 . -32) (undo-tree-id574 . -9) (undo-tree-id575 . -32) (undo-tree-id576 . -32) (undo-tree-id577 . -32) (undo-tree-id578 . -32) (undo-tree-id579 . -32) (undo-tree-id580 . -32) (undo-tree-id581 . -32) (undo-tree-id582 . -9) (undo-tree-id583 . -32) (undo-tree-id584 . -32) (undo-tree-id585 . -32) (undo-tree-id586 . -32) (undo-tree-id587 . -32) (undo-tree-id588 . -9) (undo-tree-id589 . -32) (undo-tree-id590 . -32) (undo-tree-id591 . -32) (undo-tree-id592 . -32) (undo-tree-id593 . -32) (undo-tree-id594 . -32) (undo-tree-id595 . -32) (undo-tree-id596 . -32) (undo-tree-id597 . -32) (undo-tree-id598 . -9) (undo-tree-id599 . -32) (undo-tree-id600 . -32) (undo-tree-id601 . -32) (undo-tree-id602 . -32) (undo-tree-id603 . -32) (undo-tree-id604 . -32) (undo-tree-id605 . -32) (undo-tree-id606 . -32) (undo-tree-id607 . -32) (undo-tree-id608 . -32) (undo-tree-id609 . -9) (undo-tree-id610 . -32) (undo-tree-id611 . -32) (undo-tree-id612 . -32) (undo-tree-id613 . -32) (undo-tree-id614 . -32) (undo-tree-id615 . -32) (undo-tree-id616 . -32) (undo-tree-id617 . -32) (undo-tree-id618 . -32) (undo-tree-id619 . -32) (undo-tree-id620 . -9) (undo-tree-id621 . -32) (undo-tree-id622 . -32) (undo-tree-id623 . -32) (undo-tree-id624 . -32) (undo-tree-id625 . -32) (undo-tree-id626 . -9) (undo-tree-id627 . -32) (undo-tree-id628 . -32) (undo-tree-id629 . -32) (undo-tree-id630 . -32) (undo-tree-id631 . -32) (undo-tree-id632 . -32) (undo-tree-id633 . -32) (undo-tree-id634 . -32) (undo-tree-id635 . -32) (undo-tree-id636 . -32) (undo-tree-id637 . 1) (undo-tree-id638 . -32) (undo-tree-id639 . -31) (undo-tree-id640 . -32) (undo-tree-id641 . -32) (undo-tree-id642 . -32) (undo-tree-id643 . -9) (undo-tree-id644 . -32) (undo-tree-id645 . -32) (undo-tree-id646 . -32) (undo-tree-id647 . -32) (undo-tree-id648 . -9) (undo-tree-id649 . -32) (undo-tree-id650 . -32) (undo-tree-id651 . -32) (undo-tree-id652 . -32) (undo-tree-id653 . -32) (undo-tree-id654 . -32) (undo-tree-id655 . -32) (undo-tree-id656 . -32) (undo-tree-id657 . -32) (undo-tree-id658 . -9) (undo-tree-id659 . -32) (undo-tree-id660 . -32) (undo-tree-id661 . -32) (undo-tree-id662 . -32) (undo-tree-id663 . -32) (undo-tree-id664 . -32) (undo-tree-id665 . -31) (undo-tree-id666 . -31) (undo-tree-id667 . -31) (undo-tree-id668 . -31) (undo-tree-id669 . -31) (undo-tree-id670 . -31) (undo-tree-id671 . -31) (undo-tree-id672 . -31) (undo-tree-id673 . -31) 66) ((35 . 68)) (26026 42105 574667 0) 0 nil])
([nil nil ((79 . 80)) nil (26026 42141 97392 0) 0 nil])
nil
([nil nil ((81 . 82)) nil (26026 42141 97390 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -83) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) 84 (82 . 84) 81) nil (26026 42141 97388 0) 0 nil])
([nil nil ((#("	template< class Str > struct Tag { };
" 0 1 (fontified t) 1 2 (face tree-sitter-hl-face:keyword fontified t) 2 3 (face tree-sitter-hl-face:keyword fontified t) 3 4 (face tree-sitter-hl-face:keyword fontified t) 4 5 (face tree-sitter-hl-face:keyword fontified t) 5 6 (face tree-sitter-hl-face:keyword fontified t) 6 7 (face tree-sitter-hl-face:keyword fontified t) 7 8 (face tree-sitter-hl-face:keyword fontified t) 8 9 (face tree-sitter-hl-face:keyword fontified t) 9 10 (face tree-sitter-hl-face:operator fontified t category c-<-as-paren-syntax c-<>-c-types-set t) 10 11 (fontified t) 11 12 (face tree-sitter-hl-face:keyword fontified t) 12 13 (face tree-sitter-hl-face:keyword fontified t) 13 14 (face tree-sitter-hl-face:keyword fontified t) 14 15 (face tree-sitter-hl-face:keyword fontified t) 15 16 (face tree-sitter-hl-face:keyword fontified t) 16 17 (fontified t) 17 18 (face tree-sitter-hl-face:type fontified t) 18 19 (face tree-sitter-hl-face:type fontified t) 19 20 (face tree-sitter-hl-face:type fontified t) 20 21 (fontified t) 21 22 (face tree-sitter-hl-face:operator fontified t category c->-as-paren-syntax) 22 23 (fontified t) 23 24 (face tree-sitter-hl-face:keyword fontified t) 24 25 (face tree-sitter-hl-face:keyword fontified t) 25 26 (face tree-sitter-hl-face:keyword fontified t) 26 27 (face tree-sitter-hl-face:keyword fontified t) 27 28 (face tree-sitter-hl-face:keyword fontified t) 28 29 (face tree-sitter-hl-face:keyword fontified t) 29 30 (fontified t) 30 31 (face tree-sitter-hl-face:type fontified t) 31 32 (face tree-sitter-hl-face:type fontified t) 32 33 (face tree-sitter-hl-face:type fontified t) 33 34 (fontified t) 34 35 (face tree-sitter-hl-face:punctuation.bracket fontified t) 35 36 (fontified t) 36 37 (face tree-sitter-hl-face:punctuation.bracket fontified t) 37 38 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 38 39 (fontified t wrap-prefix #("	  " 0 1 (fontified t)))) . 165) (undo-tree-id1854 . 1) (undo-tree-id1855 . 1) (undo-tree-id1856 . 1) (undo-tree-id1857 . 1) (undo-tree-id1858 . -39) (undo-tree-id1859 . -39) (undo-tree-id1860 . -39) (undo-tree-id1861 . -39) (undo-tree-id1862 . -39) (undo-tree-id1863 . -39) (undo-tree-id1864 . -39) (undo-tree-id1865 . -39) (undo-tree-id1866 . -39) (undo-tree-id1867 . -11) (undo-tree-id1868 . -11) (undo-tree-id1869 . -11) (undo-tree-id1870 . -11) (undo-tree-id1871 . -11) (undo-tree-id1872 . -11) (undo-tree-id1873 . -11) (undo-tree-id1874 . -11) (undo-tree-id1875 . -11) (undo-tree-id1876 . -11) (undo-tree-id1877 . -11) (undo-tree-id1878 . -11) (undo-tree-id1879 . -11) (undo-tree-id1880 . -11) (undo-tree-id1881 . -11) (undo-tree-id1882 . -11) (undo-tree-id1883 . -11) (undo-tree-id1884 . -11) (undo-tree-id1885 . -11) (undo-tree-id1886 . -11) (undo-tree-id1887 . -11) (undo-tree-id1888 . -11) (undo-tree-id1889 . -11) (undo-tree-id1890 . -11) (undo-tree-id1891 . -11) (undo-tree-id1892 . -11) (undo-tree-id1893 . -11) (undo-tree-id1894 . -11) (undo-tree-id1895 . -11) (undo-tree-id1896 . -11) (undo-tree-id1897 . -11) (undo-tree-id1898 . -11) (undo-tree-id1899 . -11) (undo-tree-id1900 . -11) (undo-tree-id1901 . -11) (undo-tree-id1902 . -11) (undo-tree-id1903 . -11) (undo-tree-id1904 . -11) (undo-tree-id1905 . -11) (undo-tree-id1906 . -11) (undo-tree-id1907 . -11) (undo-tree-id1908 . -11) (undo-tree-id1909 . -11) (undo-tree-id1910 . -11) (undo-tree-id1911 . -11) (undo-tree-id1912 . -11) (undo-tree-id1913 . -11) (undo-tree-id1914 . -11) (undo-tree-id1915 . -11) (undo-tree-id1916 . -11) (undo-tree-id1917 . -11) (undo-tree-id1918 . -11) (undo-tree-id1919 . -11) (undo-tree-id1920 . -11) (undo-tree-id1921 . -11) (undo-tree-id1922 . -11) (undo-tree-id1923 . -11) (undo-tree-id1924 . -11) (undo-tree-id1925 . -11) (undo-tree-id1926 . -11) (undo-tree-id1927 . -11) (undo-tree-id1928 . -11) (undo-tree-id1929 . -11) (undo-tree-id1930 . -11) (undo-tree-id1931 . -11) (undo-tree-id1932 . -11) (undo-tree-id1933 . -11) (undo-tree-id1934 . -11) (undo-tree-id1935 . -11) (undo-tree-id1936 . -11) (undo-tree-id1937 . -11) (undo-tree-id1938 . -11) (undo-tree-id1939 . -11) (undo-tree-id1940 . -11) (undo-tree-id1941 . -11) (undo-tree-id1942 . -11) (undo-tree-id1943 . -11) (undo-tree-id1944 . -11) (undo-tree-id1945 . -11) (undo-tree-id1946 . -11) (undo-tree-id1947 . -11) (undo-tree-id1948 . -11) (undo-tree-id1949 . -11) (undo-tree-id1950 . -11) (undo-tree-id1951 . -11) (undo-tree-id1952 . -11) (undo-tree-id1953 . -11) (undo-tree-id1954 . -11) (undo-tree-id1955 . -11) (undo-tree-id1956 . -11) (undo-tree-id1957 . -11) (undo-tree-id1958 . -11) (undo-tree-id1959 . -11) (undo-tree-id1960 . -11) (undo-tree-id1961 . -11) (undo-tree-id1962 . -11) (undo-tree-id1963 . -11) (undo-tree-id1964 . -11) (undo-tree-id1965 . -11) (undo-tree-id1966 . -11) (undo-tree-id1967 . -11) (undo-tree-id1968 . -11) (undo-tree-id1969 . -11) (undo-tree-id1970 . -11) (undo-tree-id1971 . -11) (undo-tree-id1972 . -11) (undo-tree-id1973 . -11) (undo-tree-id1974 . -11) (undo-tree-id1975 . -11) (undo-tree-id1976 . -11) (undo-tree-id1977 . -11) (undo-tree-id1978 . -11) (undo-tree-id1979 . -11) (undo-tree-id1980 . -11) (undo-tree-id1981 . -11) (undo-tree-id1982 . -11) (undo-tree-id1983 . -11) (undo-tree-id1984 . -11) (undo-tree-id1985 . -11) (undo-tree-id1986 . -30) (undo-tree-id1987 . -30) (undo-tree-id1988 . -30) (undo-tree-id1989 . -30) (undo-tree-id1990 . -30) (undo-tree-id1991 . -30) (undo-tree-id1992 . -30) (undo-tree-id1993 . -30) (undo-tree-id1994 . -30) (undo-tree-id1995 . -30) (undo-tree-id1996 . -30) (undo-tree-id1997 . -30) (undo-tree-id1998 . -30) (undo-tree-id1999 . -30) (undo-tree-id2000 . -30) (undo-tree-id2001 . -30) (undo-tree-id2002 . -30) (undo-tree-id2003 . -30) (undo-tree-id2004 . -30) (undo-tree-id2005 . -30) (undo-tree-id2006 . -30) (undo-tree-id2007 . -30) (undo-tree-id2008 . -30) (undo-tree-id2009 . -30) (undo-tree-id2010 . -30) (undo-tree-id2011 . -30) (undo-tree-id2012 . -30) (undo-tree-id2013 . -30) (undo-tree-id2014 . -30) (undo-tree-id2015 . -30) (undo-tree-id2016 . -30) (undo-tree-id2017 . -30) (undo-tree-id2018 . -30) (undo-tree-id2019 . -30) (undo-tree-id2020 . -30) (undo-tree-id2021 . -30) (undo-tree-id2022 . -30) (undo-tree-id2023 . -30) (undo-tree-id2024 . -30) (undo-tree-id2025 . -30) (undo-tree-id2026 . -30) (undo-tree-id2027 . -30) (undo-tree-id2028 . -30) (undo-tree-id2029 . -30) (undo-tree-id2030 . -30) (undo-tree-id2031 . -30) (undo-tree-id2032 . -30) (undo-tree-id2033 . -30) (undo-tree-id2034 . -30) (undo-tree-id2035 . -30) (undo-tree-id2036 . -30) (undo-tree-id2037 . -30) (undo-tree-id2038 . -30) (undo-tree-id2039 . -30) (undo-tree-id2040 . -17) (undo-tree-id2041 . -18) (undo-tree-id2042 . -18) (undo-tree-id2043 . -18) (undo-tree-id2044 . -18) (undo-tree-id2045 . -18) (undo-tree-id2046 . -18) (undo-tree-id2047 . -18) (undo-tree-id2048 . -18) (undo-tree-id2049 . -15) (undo-tree-id2050 . -39) (undo-tree-id2051 . -15) (undo-tree-id2052 . -15) (undo-tree-id2053 . -39) (undo-tree-id2054 . -11) (undo-tree-id2055 . -15) (undo-tree-id2056 . -9) (undo-tree-id2057 . -11) (undo-tree-id2058 . -1) (undo-tree-id2059 . -9) (undo-tree-id2060 . -9) (undo-tree-id2061 . -1) (undo-tree-id2062 . -11) (undo-tree-id2063 . -9) (undo-tree-id2064 . -17) (undo-tree-id2065 . -11) (undo-tree-id2066 . -21) (undo-tree-id2067 . -17) (undo-tree-id2068 . -23) (undo-tree-id2069 . -21) (undo-tree-id2070 . -30) (undo-tree-id2071 . -23) (undo-tree-id2072 . -30) (undo-tree-id2073 . -30) (undo-tree-id2074 . -30) (undo-tree-id2075 . -30) (undo-tree-id2076 . -34) (undo-tree-id2077 . -30) (undo-tree-id2078 . -34) (undo-tree-id2079 . -34) (undo-tree-id2080 . -36) (undo-tree-id2081 . -34) (undo-tree-id2082 . -36) (undo-tree-id2083 . -36) (undo-tree-id2084 . -36) (undo-tree-id2085 . -36) (undo-tree-id2086 . -36) (undo-tree-id2087 . -36) (undo-tree-id2088 . -36) (undo-tree-id2089 . -37) (undo-tree-id2090 . -37) (undo-tree-id2091 . -37) (undo-tree-id2092 . -37) (undo-tree-id2093 . -37) (undo-tree-id2094 . -37) (undo-tree-id2095 . -37) (undo-tree-id2096 . -37) (undo-tree-id2097 . -36) (undo-tree-id2098 . -37) (undo-tree-id2099 . -34) (undo-tree-id2100 . -36) (undo-tree-id2101 . -30) (undo-tree-id2102 . -34) (undo-tree-id2103 . -23) (undo-tree-id2104 . -30) (undo-tree-id2105 . -21) (undo-tree-id2106 . -23) (undo-tree-id2107 . -17) (undo-tree-id2108 . -21) (undo-tree-id2109 . -11) (undo-tree-id2110 . -17) (undo-tree-id2111 . -9) (undo-tree-id2112 . -11) (undo-tree-id2113 . -1) (undo-tree-id2114 . -9) (undo-tree-id2115 . -9) (undo-tree-id2116 . -1) (undo-tree-id2117 . -11) (undo-tree-id2118 . -9) (undo-tree-id2119 . -17) (undo-tree-id2120 . -11) (undo-tree-id2121 . -17) (undo-tree-id2122 . -17) (undo-tree-id2123 . -17) (undo-tree-id2124 . -17) (undo-tree-id2125 . -17) (undo-tree-id2126 . -17) (undo-tree-id2127 . -17) (undo-tree-id2128 . -17) (undo-tree-id2129 . -17) 182) nil (26026 42141 97366 0) 0 nil])
([nil nil ((215 . 216)) nil (26026 42141 97086 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -35) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) 36 (34 . 36) (t 26026 42141 107161 166000) 33) nil (26027 21166 949101 0) 0 nil])
([nil nil ((1 . 848) (#("#pragma once

namespace Eshamel
{

	template< char...cs >  struct MosesString { };

	template< class...Ts > struct Doc { };
	template< class...Ts > struct Node { };

namespace details	
{
	
} // details

} // Eshamel
" 0 1 (face tree-sitter-hl-face:function.macro c-is-sws t c-in-sws t fontified t) 1 7 (face tree-sitter-hl-face:function.macro c-in-sws t fontified t) 7 13 (c-in-sws t fontified t) 13 14 (c-in-sws t c-is-sws t fontified t) 14 15 (face tree-sitter-hl-face:keyword fontified t c-is-sws t) 15 23 (face tree-sitter-hl-face:keyword fontified t) 23 24 (fontified t) 24 31 (face tree-sitter-hl-face:type fontified t) 31 32 (fontified t) 32 33 (face tree-sitter-hl-face:punctuation.bracket fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 44 (face tree-sitter-hl-face:keyword fontified t) 44 45 (face tree-sitter-hl-face:operator fontified t c-<>-c-types-set t category c-<-as-paren-syntax) 45 46 (fontified t) 46 50 (face tree-sitter-hl-face:type.builtin fontified t) 50 53 (face tree-sitter-hl-face:keyword fontified t) 53 56 (fontified t) 56 57 (face tree-sitter-hl-face:operator fontified t category c->-as-paren-syntax) 57 59 (fontified t) 59 65 (face tree-sitter-hl-face:keyword fontified t) 65 66 (fontified t) 66 77 (face tree-sitter-hl-face:type fontified t) 77 78 (fontified t) 78 79 (face tree-sitter-hl-face:punctuation.bracket fontified t) 79 80 (fontified t) 80 81 (face tree-sitter-hl-face:punctuation.bracket fontified t) 81 82 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 82 83 (fontified t) 83 85 (fontified t) 85 93 (face tree-sitter-hl-face:keyword fontified t) 93 94 (face tree-sitter-hl-face:operator fontified t c-<>-c-types-set t category c-<-as-paren-syntax) 94 95 (fontified t) 95 100 (face tree-sitter-hl-face:keyword fontified t) 100 103 (face tree-sitter-hl-face:keyword fontified t) 103 105 (face tree-sitter-hl-face:type fontified t) 105 106 (fontified t) 106 107 (face tree-sitter-hl-face:operator fontified t category c->-as-paren-syntax) 107 108 (fontified t) 108 114 (face tree-sitter-hl-face:keyword fontified t) 114 115 (fontified t) 115 118 (face tree-sitter-hl-face:type fontified t) 118 119 (fontified t) 119 120 (face tree-sitter-hl-face:punctuation.bracket fontified t) 120 121 (fontified t) 121 122 (face tree-sitter-hl-face:punctuation.bracket fontified t) 122 123 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 123 125 (fontified t) 125 133 (face tree-sitter-hl-face:keyword fontified t) 133 134 (face tree-sitter-hl-face:operator fontified t c-<>-c-types-set t category c-<-as-paren-syntax) 134 135 (fontified t) 135 140 (face tree-sitter-hl-face:keyword fontified t) 140 143 (face tree-sitter-hl-face:keyword fontified t) 143 145 (face tree-sitter-hl-face:type fontified t) 145 146 (fontified t) 146 147 (face tree-sitter-hl-face:operator fontified t category c->-as-paren-syntax) 147 148 (fontified t) 148 154 (face tree-sitter-hl-face:keyword fontified t) 154 155 (fontified t) 155 159 (face tree-sitter-hl-face:type fontified t) 159 160 (fontified t) 160 161 (face tree-sitter-hl-face:punctuation.bracket fontified t) 161 162 (fontified t) 162 163 (face tree-sitter-hl-face:punctuation.bracket fontified t) 163 164 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 164 166 (fontified t) 166 175 (face tree-sitter-hl-face:keyword fontified t) 175 176 (fontified t) 176 183 (face tree-sitter-hl-face:type fontified t) 183 185 (fontified t) 185 186 (face tree-sitter-hl-face:punctuation.bracket fontified t) 186 189 (fontified t) 189 190 (face tree-sitter-hl-face:punctuation.bracket fontified t) 190 191 (fontified t) 191 201 (face tree-sitter-hl-face:comment fontified t) 201 203 (fontified t) 203 204 (face tree-sitter-hl-face:punctuation.bracket fontified t) 204 205 (fontified t c-is-sws t c-in-sws t) 205 206 (face tree-sitter-hl-face:comment fontified t c-is-sws t c-in-sws t) 206 215 (face tree-sitter-hl-face:comment fontified t c-in-sws t) 215 216 (c-in-sws t fontified t)) . 1) (undo-tree-id0 . -44) (undo-tree-id1 . -13) (undo-tree-id2 . -14) (undo-tree-id3 . -13) (undo-tree-id4 . -32) (undo-tree-id5 . -14) (undo-tree-id6 . -35) (undo-tree-id7 . -32) (undo-tree-id8 . -83) (undo-tree-id9 . -35) (undo-tree-id10 . -84) (undo-tree-id11 . -83) (undo-tree-id12 . -124) (undo-tree-id13 . -84) (undo-tree-id14 . -165) (undo-tree-id15 . -124) (undo-tree-id16 . -166) (undo-tree-id17 . -165) (undo-tree-id18 . -166) (undo-tree-id19 . -166) (undo-tree-id20 . -166) (undo-tree-id21 . -166) (undo-tree-id22 . -166) (undo-tree-id23 . -166) (undo-tree-id24 . -185) (undo-tree-id25 . -166) (undo-tree-id26 . -187) (undo-tree-id27 . -185) (undo-tree-id28 . -189) (undo-tree-id29 . -187) (undo-tree-id30 . -202) (undo-tree-id31 . -189) (undo-tree-id32 . -203) (undo-tree-id33 . -202) (undo-tree-id34 . -203) (undo-tree-id35 . -203) (undo-tree-id36 . -203) (undo-tree-id37 . -203) (undo-tree-id38 . -203) (undo-tree-id39 . -203) (undo-tree-id40 . -204) (undo-tree-id41 . -203) (undo-tree-id42 . -205) (undo-tree-id43 . -204) (undo-tree-id44 . -206) (undo-tree-id45 . -205) (undo-tree-id46 . -206) (undo-tree-id47 . -206) (undo-tree-id48 . -207) (undo-tree-id49 . -206) (undo-tree-id50 . -207) (undo-tree-id51 . -207) (undo-tree-id52 . -207) (undo-tree-id53 . -207) (undo-tree-id54 . -208) (undo-tree-id55 . -207) (undo-tree-id56 . -216) (undo-tree-id57 . -208) (undo-tree-id58 . -203) (undo-tree-id59 . -216) (undo-tree-id60 . -202) (undo-tree-id61 . -203) (undo-tree-id62 . -203) (undo-tree-id63 . -202) (undo-tree-id64 . -202) (undo-tree-id65 . -203) (undo-tree-id66 . -203) (undo-tree-id67 . -202) (undo-tree-id68 . -202) (undo-tree-id69 . -203) (undo-tree-id70 . -189) (undo-tree-id71 . -202) (undo-tree-id72 . -187) (undo-tree-id73 . -189) (undo-tree-id74 . -185) (undo-tree-id75 . -187) (undo-tree-id76 . -166) (undo-tree-id77 . -185) (undo-tree-id78 . -165) (undo-tree-id79 . -166) (undo-tree-id80 . -124) (undo-tree-id81 . -165) (undo-tree-id82 . -84) (undo-tree-id83 . -124) (undo-tree-id84 . -85) (undo-tree-id85 . -84) (undo-tree-id86 . -83) (undo-tree-id87 . -85) (undo-tree-id88 . -36) (undo-tree-id89 . -83) (undo-tree-id90 . -36) (undo-tree-id91 . -36) (undo-tree-id92 . -44) (undo-tree-id93 . -36) (undo-tree-id94 . -44) (undo-tree-id95 . -44) (undo-tree-id96 . -44) (undo-tree-id97 . -44) (undo-tree-id98 . -46) (undo-tree-id99 . -44) (undo-tree-id100 . -50) (undo-tree-id101 . -46) (undo-tree-id102 . -53) (undo-tree-id103 . -50) (undo-tree-id104 . -56) (undo-tree-id105 . -53) (undo-tree-id106 . -59) (undo-tree-id107 . -56) (undo-tree-id108 . -66) (undo-tree-id109 . -59) (undo-tree-id110 . -78) (undo-tree-id111 . -66) (undo-tree-id112 . -80) (undo-tree-id113 . -78) (undo-tree-id114 . -80) (undo-tree-id115 . -80) (undo-tree-id116 . -80) (undo-tree-id117 . -80) (undo-tree-id118 . -80) (undo-tree-id119 . -80) (undo-tree-id120 . -83) (undo-tree-id121 . -80) (undo-tree-id122 . -80) (undo-tree-id123 . -83) (undo-tree-id124 . -78) (undo-tree-id125 . -80) (undo-tree-id126 . -66) (undo-tree-id127 . -78) (undo-tree-id128 . -78) (undo-tree-id129 . -66) (undo-tree-id130 . -80) (undo-tree-id131 . -78) (undo-tree-id132 . -78) (undo-tree-id133 . -80) (undo-tree-id134 . -66) (undo-tree-id135 . -78) (undo-tree-id136 . -59) (undo-tree-id137 . -66) (undo-tree-id138 . -56) (undo-tree-id139 . -59) (undo-tree-id140 . -53) (undo-tree-id141 . -56) (undo-tree-id142 . -50) (undo-tree-id143 . -53) (undo-tree-id144 . -46) (undo-tree-id145 . -50) (undo-tree-id146 . -44) (undo-tree-id147 . -46) (undo-tree-id148 . -36) (undo-tree-id149 . -44) (undo-tree-id150 . -36) (undo-tree-id151 . -36) (undo-tree-id152 . -36) (undo-tree-id153 . -36) (undo-tree-id154 . -36) (undo-tree-id155 . -36) (undo-tree-id156 . -36) (undo-tree-id157 . -36) (undo-tree-id158 . -36) (undo-tree-id159 . -36) (undo-tree-id160 . -36) (undo-tree-id161 . -36) (undo-tree-id162 . -36) (undo-tree-id163 . -36) (undo-tree-id164 . -36) (undo-tree-id165 . -36) (undo-tree-id166 . -36) (undo-tree-id167 . -36) (undo-tree-id168 . -36) (undo-tree-id169 . -36) (undo-tree-id170 . -36) (undo-tree-id171 . -36) (undo-tree-id172 . -36) (undo-tree-id173 . -36) (undo-tree-id174 . -36) (undo-tree-id175 . -36) (undo-tree-id176 . -36) (undo-tree-id177 . -36) (undo-tree-id178 . -36) (undo-tree-id179 . -36) (undo-tree-id180 . -36) (undo-tree-id181 . -36) (undo-tree-id182 . -36) (undo-tree-id183 . -36) (undo-tree-id184 . -36) (undo-tree-id185 . -36) (undo-tree-id186 . -36) (undo-tree-id187 . -36) (undo-tree-id188 . -36) (undo-tree-id189 . -36) (undo-tree-id190 . -36) (undo-tree-id191 . -36) (undo-tree-id192 . -36) (undo-tree-id193 . -36) (undo-tree-id194 . -36) (undo-tree-id195 . -36) (undo-tree-id196 . -36) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -36) (undo-tree-id200 . -1) (undo-tree-id201 . -36) (undo-tree-id202 . -1) (undo-tree-id203 . -36) (undo-tree-id204 . -36) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -36) (undo-tree-id208 . -1) (undo-tree-id209 . -36) (undo-tree-id210 . -1) (undo-tree-id211 . -36) (undo-tree-id212 . -1) (undo-tree-id213 . -36) (undo-tree-id214 . -1) (undo-tree-id215 . -36) (undo-tree-id216 . -36) (undo-tree-id217 . -36) (undo-tree-id218 . -36) (undo-tree-id219 . -36) (undo-tree-id220 . -36) (undo-tree-id221 . -36) (undo-tree-id222 . -36) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -36) (undo-tree-id226 . -1) (undo-tree-id227 . -36) (undo-tree-id228 . -36) (undo-tree-id229 . -36) (undo-tree-id230 . -36) (undo-tree-id231 . -36) (undo-tree-id232 . -1) (undo-tree-id233 . -36) (undo-tree-id234 . -36) (undo-tree-id235 . -36) (undo-tree-id236 . -36) (undo-tree-id237 . -36) (undo-tree-id238 . -36) (undo-tree-id239 . -36) (undo-tree-id240 . -36) (undo-tree-id241 . -83) (undo-tree-id242 . -36) (undo-tree-id243 . -85) (undo-tree-id244 . -83) (undo-tree-id245 . -125) (undo-tree-id246 . -85) (undo-tree-id247 . -165) (undo-tree-id248 . -125) (undo-tree-id249 . -170) (undo-tree-id250 . -165) (undo-tree-id251 . -185) (undo-tree-id252 . -170) (undo-tree-id253 . -187) (undo-tree-id254 . -185) (undo-tree-id255 . -187) (undo-tree-id256 . -187) (undo-tree-id257 . -187) (undo-tree-id258 . -187) (undo-tree-id259 . -187) (undo-tree-id260 . -187) (undo-tree-id261 . -185) (undo-tree-id262 . -187) (undo-tree-id263 . -187) (undo-tree-id264 . -185) (undo-tree-id265 . -193) (undo-tree-id266 . -187) (undo-tree-id267 . -202) (undo-tree-id268 . -193) (undo-tree-id269 . -193) (undo-tree-id270 . -202) (undo-tree-id271 . -191) (undo-tree-id272 . -193) (undo-tree-id273 . -189) (undo-tree-id274 . -191) (undo-tree-id275 . -187) (undo-tree-id276 . -189) (undo-tree-id277 . -187) (undo-tree-id278 . -187) (undo-tree-id279 . -185) (undo-tree-id280 . -187) (undo-tree-id281 . -185) (undo-tree-id282 . -185) (undo-tree-id283 . -185) (undo-tree-id284 . -185) (undo-tree-id285 . -187) (undo-tree-id286 . -185) (undo-tree-id287 . -189) (undo-tree-id288 . -187) (undo-tree-id289 . -187) (undo-tree-id290 . -189) (undo-tree-id291 . -185) (undo-tree-id292 . -187) (undo-tree-id293 . -166) (undo-tree-id294 . -185) (undo-tree-id295 . -165) (undo-tree-id296 . -166) (undo-tree-id297 . -166) (undo-tree-id298 . -165) (undo-tree-id299 . -176) (undo-tree-id300 . -166) (undo-tree-id301 . -176) (undo-tree-id302 . -176) (undo-tree-id303 . -176) (undo-tree-id304 . -176) (undo-tree-id305 . -176) (undo-tree-id306 . -176) (undo-tree-id307 . -185) (undo-tree-id308 . -176) (undo-tree-id309 . -166) (undo-tree-id310 . -185) (undo-tree-id311 . -176) (undo-tree-id312 . -166) (undo-tree-id313 . -176) (undo-tree-id314 . -176) (undo-tree-id315 . -176) (undo-tree-id316 . -176) (undo-tree-id317 . -176) (undo-tree-id318 . -176) (undo-tree-id319 . -183) (undo-tree-id320 . -176) (undo-tree-id321 . -183) (undo-tree-id322 . -183) (undo-tree-id323 . -183) (undo-tree-id324 . -183) (undo-tree-id325 . -183) (undo-tree-id326 . -183) (undo-tree-id327 . -183) (undo-tree-id328 . -166) (undo-tree-id329 . 32) (undo-tree-id330 . -183) (undo-tree-id331 . -166) (undo-tree-id332 . -183) (undo-tree-id333 . -183) (undo-tree-id334 . -183) (undo-tree-id335 . -183) (undo-tree-id336 . -176) (undo-tree-id337 . -183) (undo-tree-id338 . -176) (undo-tree-id339 . -176) (undo-tree-id340 . -176) (undo-tree-id341 . -176) (undo-tree-id342 . -176) (undo-tree-id343 . -176) (undo-tree-id344 . -166) (undo-tree-id345 . -176) (undo-tree-id346 . -166) (undo-tree-id347 . -166) (undo-tree-id348 . -166) (undo-tree-id349 . -166) (undo-tree-id350 . -166) (undo-tree-id351 . -166) (undo-tree-id352 . -166) (undo-tree-id353 . -166) (undo-tree-id354 . -166) (undo-tree-id355 . -166) (undo-tree-id356 . -166) (undo-tree-id357 . -166) (undo-tree-id358 . -166) (undo-tree-id359 . -166) (undo-tree-id360 . -166) (undo-tree-id361 . -166) (undo-tree-id362 . -176) (undo-tree-id363 . -166) (undo-tree-id364 . -183) (undo-tree-id365 . -176) (undo-tree-id366 . -183) (undo-tree-id367 . -183) (undo-tree-id368 . -183) (undo-tree-id369 . -183) (undo-tree-id370 . -183) (undo-tree-id371 . -183) (undo-tree-id372 . -183) (undo-tree-id373 . -183) (undo-tree-id374 . -183) (undo-tree-id375 . -183) (undo-tree-id376 . -176) (undo-tree-id377 . -183) (undo-tree-id378 . -176) (undo-tree-id379 . -176) (undo-tree-id380 . -176) (undo-tree-id381 . -176) (undo-tree-id382 . -176) (undo-tree-id383 . -176) (undo-tree-id384 . -166) (undo-tree-id385 . -176) (undo-tree-id386 . -166) (undo-tree-id387 . -166) (undo-tree-id388 . -166) (undo-tree-id389 . -166) (undo-tree-id390 . -166) (undo-tree-id391 . -166) (undo-tree-id392 . -166) (undo-tree-id393 . -166) (undo-tree-id394 . -166) (undo-tree-id395 . -166) (undo-tree-id396 . -165) (undo-tree-id397 . -166) (undo-tree-id398 . -124) (undo-tree-id399 . -165) (undo-tree-id400 . -165) (undo-tree-id401 . -124) (undo-tree-id402 . -124) (undo-tree-id403 . -165) (undo-tree-id404 . -84) (undo-tree-id405 . -124) (undo-tree-id406 . -83) (undo-tree-id407 . -84) (undo-tree-id408 . -35) (undo-tree-id409 . -83) (undo-tree-id410 . -35) (undo-tree-id411 . -35) (undo-tree-id412 . -35) (undo-tree-id413 . -35) (undo-tree-id414 . -35) (undo-tree-id415 . -35) (undo-tree-id416 . -36) (undo-tree-id417 . -35) (undo-tree-id418 . -44) (undo-tree-id419 . -36) (undo-tree-id420 . -44) (undo-tree-id421 . -44) (undo-tree-id422 . -44) (undo-tree-id423 . -44) (undo-tree-id424 . -44) (undo-tree-id425 . -44) (undo-tree-id426 . -36) (undo-tree-id427 . -44) (undo-tree-id428 . -44) (undo-tree-id429 . -36) (undo-tree-id430 . -44) (undo-tree-id431 . -44) (undo-tree-id432 . -46) (undo-tree-id433 . -44) (undo-tree-id434 . -46) (undo-tree-id435 . -46) (undo-tree-id436 . -46) (undo-tree-id437 . -46) (undo-tree-id438 . -46) (undo-tree-id439 . -46) (undo-tree-id440 . -46) (undo-tree-id441 . -46) (undo-tree-id442 . -46) (undo-tree-id443 . -46) (undo-tree-id444 . -50) (undo-tree-id445 . -46) (undo-tree-id446 . -50) (undo-tree-id447 . -50) (undo-tree-id448 . -50) (undo-tree-id449 . -50) (undo-tree-id450 . -50) (undo-tree-id451 . -50) (undo-tree-id452 . -53) (undo-tree-id453 . -50) (undo-tree-id454 . -53) (undo-tree-id455 . -53) (undo-tree-id456 . -53) (undo-tree-id457 . -53) (undo-tree-id458 . -53) (undo-tree-id459 . -53) (undo-tree-id460 . -56) (undo-tree-id461 . -53) (undo-tree-id462 . -56) (undo-tree-id463 . -56) (undo-tree-id464 . -56) (undo-tree-id465 . -56) (undo-tree-id466 . -56) (undo-tree-id467 . -56) (undo-tree-id468 . -59) (undo-tree-id469 . -56) (undo-tree-id470 . -66) (undo-tree-id471 . -59) (undo-tree-id472 . -78) (undo-tree-id473 . -66) (undo-tree-id474 . -78) (undo-tree-id475 . -78) (undo-tree-id476 . -78) (undo-tree-id477 . -78) (undo-tree-id478 . -78) (undo-tree-id479 . -78) (undo-tree-id480 . -80) (undo-tree-id481 . -78) (undo-tree-id482 . -80) (undo-tree-id483 . -80) (undo-tree-id484 . -80) (undo-tree-id485 . -80) (undo-tree-id486 . -80) (undo-tree-id487 . -80) (undo-tree-id488 . -83) (undo-tree-id489 . -80) (undo-tree-id490 . -122) (undo-tree-id491 . -83) (undo-tree-id492 . -122) (undo-tree-id493 . -122) (undo-tree-id494 . -122) (undo-tree-id495 . -122) (undo-tree-id496 . -122) (undo-tree-id497 . -122) (undo-tree-id498 . -121) (undo-tree-id499 . -122) (undo-tree-id500 . -119) (undo-tree-id501 . -121) (undo-tree-id502 . -121) (undo-tree-id503 . -119) (undo-tree-id504 . -161) (undo-tree-id505 . -121) (undo-tree-id506 . -160) (undo-tree-id507 . -161) (undo-tree-id508 . -162) (undo-tree-id509 . -160) (undo-tree-id510 . -122) (undo-tree-id511 . -162) (undo-tree-id512 . -83) (undo-tree-id513 . -122) (undo-tree-id514 . -73) (undo-tree-id515 . -83) (undo-tree-id516 . -73) (undo-tree-id517 . -73) (undo-tree-id518 . -32) (undo-tree-id519 . -73) (undo-tree-id520 . -32) (undo-tree-id521 . -32) (undo-tree-id522 . -32) (undo-tree-id523 . -32) (undo-tree-id524 . -34) (undo-tree-id525 . -32) (undo-tree-id526 . -34) (undo-tree-id527 . -44) (undo-tree-id528 . -34) (undo-tree-id529 . -34) (undo-tree-id530 . -34) (undo-tree-id531 . -34) (undo-tree-id532 . -34) (undo-tree-id533 . -34) (undo-tree-id534 . -44) (undo-tree-id535 . -34) (undo-tree-id536 . -34) (undo-tree-id537 . -34) (undo-tree-id538 . -34) (undo-tree-id539 . -34) (undo-tree-id540 . 182) (undo-tree-id541 . -34) (undo-tree-id542 . -44) (undo-tree-id543 . -34) (undo-tree-id544 . -34) (undo-tree-id545 . -34) (undo-tree-id546 . -34) (undo-tree-id547 . -34) (undo-tree-id548 . -34) (undo-tree-id549 . -34) (undo-tree-id550 . -34) (undo-tree-id551 . -34) (undo-tree-id552 . -34) (undo-tree-id553 . -34) (undo-tree-id554 . -44) (undo-tree-id555 . -34) (undo-tree-id556 . -34) (undo-tree-id557 . -34) (undo-tree-id558 . -34) (undo-tree-id559 . -34) (undo-tree-id560 . -34) (undo-tree-id561 . -34) (undo-tree-id562 . -34) (undo-tree-id563 . -34) (undo-tree-id564 . -34) (undo-tree-id565 . -34) (undo-tree-id566 . -34) (undo-tree-id567 . -34) (undo-tree-id568 . -34) (undo-tree-id569 . -34) (undo-tree-id570 . -34) (undo-tree-id571 . -34) (undo-tree-id572 . -34) (undo-tree-id573 . -12)) nil (26027 21166 949057 0) 0 nil])
([nil nil ((560 . 562) (559 . 560) (557 . 559) (556 . 557) (t 26027 21166 961652 454000)) nil (26027 21361 456306 0) 0 nil])
([nil nil ((#("," 0 1 (face tree-sitter-hl-face:comment c-in-sws t fontified t)) . -564) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (#("." 0 1 (face tree-sitter-hl-face:comment c-in-sws t fontified t)) . -565) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) 566 (565 . 566) (564 . 565) (561 . 564) (#("a" 0 1 (face tree-sitter-hl-face:comment c-in-sws t fontified t)) . -561) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (#("T" 0 1 (face tree-sitter-hl-face:comment c-in-sws t fontified t)) . -562) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) 563 (#("a" 0 1 (face tree-sitter-hl-face:comment fontified t c-in-sws t)) . -563) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) 564 (561 . 564)) nil (26027 21361 456298 0) 0 nil])
([nil nil ((564 . 579)) nil (26027 21361 456194 0) 0 nil])
([nil nil ((574 . 576) (#("\"" 0 1 (c-in-sws t face tree-sitter-hl-face:comment fontified nil)) . -574) (574 . 575)) nil (26027 21361 456192 0) 0 nil])
([nil nil ((#("\"" 0 1 (face tree-sitter-hl-face:comment fontified t c-in-sws t)) . 575) (undo-tree-id910 . 1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1)) nil (26027 21361 456190 0) 0 nil])
([nil nil ((580 . 581) (#("\"" 0 1 (c-in-sws t face tree-sitter-hl-face:comment fontified nil)) . -580) (580 . 581)) nil (26027 21361 456179 0) 0 nil])
([nil nil ((589 . 595) (588 . 590) (#("\"" 0 1 (c-in-sws t face tree-sitter-hl-face:comment fontified nil)) . -588) (581 . 589)) nil (26027 21361 456177 0) 0 nil])
([nil nil ((217 . 218) (#(" " 0 1 (fontified nil)) . 217) (216 . 217)) nil (26027 21361 456175 0) 0 nil])
([nil nil ((215 . 216) (#(" " 0 1 (fontified nil)) . 214) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (215 . 216)) nil (26027 21361 456173 0) 0 nil])
([nil nil ((#("t" 0 1 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -235) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) 236 (231 . 236) (230 . 231) (220 . 230) (217 . 220) 215) nil (26027 21361 456146 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -242) (242 . 243) (#(")" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified nil wrap-prefix #("		  " 0 2 (fontified t)))) . -242) (242 . 243) (241 . 243) (232 . 241) (#("GetString" 0 1 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 1 2 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 2 3 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 3 4 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 4 5 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 5 6 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 6 7 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 7 8 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 8 9 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -232) (undo-tree-id758 . -9) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -2) (undo-tree-id765 . -1) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -3) (undo-tree-id771 . -2) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -4) (undo-tree-id781 . -3) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -5) (undo-tree-id789 . -4) (undo-tree-id790 . -5) (undo-tree-id791 . -5) (undo-tree-id792 . -5) (undo-tree-id793 . -6) (undo-tree-id794 . -5) (undo-tree-id795 . -6) (undo-tree-id796 . -6) (undo-tree-id797 . -6) (undo-tree-id798 . -6) (undo-tree-id799 . -6) (undo-tree-id800 . -7) (undo-tree-id801 . -6) (undo-tree-id802 . -7) (undo-tree-id803 . -7) (undo-tree-id804 . -7) (undo-tree-id805 . -7) (undo-tree-id806 . -8) (undo-tree-id807 . -7) (undo-tree-id808 . -8) (undo-tree-id809 . -9) (undo-tree-id810 . -8) (undo-tree-id811 . -9) (undo-tree-id812 . -9) (undo-tree-id813 . -9) (undo-tree-id814 . -9) (undo-tree-id815 . -9) (undo-tree-id816 . -9) (undo-tree-id817 . -9) (undo-tree-id818 . -9) (undo-tree-id819 . -9) (undo-tree-id820 . -9) (undo-tree-id821 . -9) (undo-tree-id822 . -9) (undo-tree-id823 . -9) 241 (235 . 241) (232 . 235) (#("Gwe" 0 1 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 1 2 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 2 3 (face (tree-sitter-hl-face:property.definition tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . 232) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -2) (undo-tree-id831 . -1) (undo-tree-id832 . -2) (undo-tree-id833 . -3) (undo-tree-id834 . -2) (undo-tree-id835 . -3) (undo-tree-id836 . -3) (undo-tree-id837 . -3) (undo-tree-id838 . -3) (undo-tree-id839 . -3) (undo-tree-id840 . -3) (undo-tree-id841 . -3) (undo-tree-id842 . -3) (undo-tree-id843 . -3) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) (undo-tree-id847 . -3) (undo-tree-id848 . -3) (undo-tree-id849 . -3) (undo-tree-id850 . -3) (undo-tree-id851 . -3) (undo-tree-id852 . -3) (undo-tree-id853 . -3) (undo-tree-id854 . -3) (undo-tree-id855 . -3) (undo-tree-id856 . -3) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -1) (undo-tree-id864 . -2) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) 233) nil (26027 21361 456126 0) 0 nil])
([nil nil ((243 . 249)) nil (26027 21361 456011 0) 0 nil])
([nil nil ((220 . 227)) nil (26027 21361 456010 0) 0 nil])
([nil nil ((220 . 230)) nil (26027 21361 456009 0) 0 nil])
([nil nil ((266 . 270) (265 . 270) (264 . 266) (261 . 264) (#(" " 0 1 (fontified nil wrap-prefix #("		  " 0 2 (fontified t)))) . 260) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (261 . 262) (#("const" 0 1 (face tree-sitter-hl-face:keyword fontified t wrap-prefix #("		  " 0 2 (fontified t))) 1 2 (face tree-sitter-hl-face:keyword fontified t wrap-prefix #("		  " 0 2 (fontified t))) 2 3 (face tree-sitter-hl-face:keyword fontified t wrap-prefix #("		  " 0 2 (fontified t))) 3 4 (face tree-sitter-hl-face:keyword fontified t wrap-prefix #("		  " 0 2 (fontified t))) 4 5 (face tree-sitter-hl-face:keyword fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -261) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -2) (undo-tree-id720 . -1) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -3) (undo-tree-id724 . -2) (undo-tree-id725 . -3) (undo-tree-id726 . -3) (undo-tree-id727 . -3) (undo-tree-id728 . -4) (undo-tree-id729 . -3) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -5) (undo-tree-id733 . -4) (undo-tree-id734 . -5) (undo-tree-id735 . -5) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -5) (undo-tree-id752 . -4) (undo-tree-id753 . -5) (undo-tree-id754 . -4) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) 266) nil (26027 21361 456003 0) 0 nil])
([nil nil ((#("			" 0 3 (fontified nil wrap-prefix #("			  " 0 3 (fontified t)))) . -268) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (266 . 268) (#("				" 0 4 (fontified t wrap-prefix #("				  " 0 4 (fontified t)))) . -265) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (#("			" 0 3 (fontified nil wrap-prefix #("			  " 0 3 (fontified t)))) . -263) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (261 . 263) 264) nil (26027 21361 455895 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -295) (295 . 296) (#("}" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified nil wrap-prefix #("			  " 0 3 (fontified t)))) . -295) (295 . 296) (294 . 296) (290 . 294) (288 . 290) (#("str" 0 1 (face tree-sitter-hl-face:variable fontified t wrap-prefix #("			  " 0 3 (fontified t))) 1 2 (face tree-sitter-hl-face:variable fontified t wrap-prefix #("			  " 0 3 (fontified t))) 2 3 (face tree-sitter-hl-face:variable fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -288) (undo-tree-id1522 . -3) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -2) (undo-tree-id1526 . -1) (undo-tree-id1527 . -2) (undo-tree-id1528 . -2) (undo-tree-id1529 . -2) (undo-tree-id1530 . -3) (undo-tree-id1531 . -2) (undo-tree-id1532 . -3) (undo-tree-id1533 . -3) (undo-tree-id1534 . -3) (undo-tree-id1535 . -3) (undo-tree-id1536 . -3) (undo-tree-id1537 . -3) (undo-tree-id1538 . -3) (undo-tree-id1539 . -3) (undo-tree-id1540 . -3) (undo-tree-id1541 . -3) (undo-tree-id1542 . -3) (undo-tree-id1543 . -3) (undo-tree-id1544 . -3) (undo-tree-id1545 . -3) (undo-tree-id1546 . -3) (undo-tree-id1547 . -3) (undo-tree-id1548 . -3) (undo-tree-id1549 . -3) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) (undo-tree-id1552 . -3) (undo-tree-id1553 . -3) (undo-tree-id1554 . -3) 291 (#(" " 0 1 (fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -291) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) 292 (287 . 292) (#("{" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified nil wrap-prefix #("			  " 0 3 (fontified t)))) . -287) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (#("}" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . 288) (287 . 289) (286 . 287) (285 . 286) (275 . 285) (268 . 275) (265 . 268) (t 26027 21361 468710 896000)) nil (26027 21418 718794 0) 0 nil])
([nil nil ((296 . 297)) nil (26027 21418 718727 0) 0 nil])
([nil nil ((295 . 296)) nil (26027 21418 718726 0) 0 nil])
([nil nil ((295 . 296)) nil (26027 21418 718725 0) 0 nil])
([nil nil ((314 . 315) (312 . 314) (#("s" 0 1 (wrap-prefix #("			  " 0 3 (fontified t)) fontified t)) . -312) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) 313 (312 . 313) (#("s" 0 1 (wrap-prefix #("			  " 0 3 (fontified t)) fontified t)) . -312) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (#("t" 0 1 (wrap-prefix #("			  " 0 3 (fontified t)) fontified t)) . -313) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (#("r" 0 1 (wrap-prefix #("			  " 0 3 (fontified t)) fontified t)) . -314) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) 315 (303 . 315) (299 . 303) 295) nil (26027 21418 718719 0) 0 nil])
([nil nil ((305 . 306) (#("9" 0 1 (face tree-sitter-hl-face:number wrap-prefix #("			  " 0 3 (fontified t)) fontified t)) . -305) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) 306 (305 . 306) (304 . 305) (303 . 305) (#("'" 0 1 (fontified nil wrap-prefix #("			  " 0 3 (fontified t)))) . -303) (302 . 304) (#(" " 0 1 (fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -302) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (#("\\" 0 1 (fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -303) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (#("'" 0 1 (fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -304) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) 305 (302 . 305) (301 . 302) (296 . 301)) nil (26027 21418 718621 0) 0 nil])
([nil nil ((287 . 290) (#("_" 0 1 (face (tree-sitter-hl-face:variable tree-sitter-hl-face:constant) fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -287) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) 288 (#("str" 0 1 (face tree-sitter-hl-face:variable fontified t wrap-prefix #("			  " 0 3 (fontified t))) 1 2 (face tree-sitter-hl-face:variable fontified t wrap-prefix #("			  " 0 3 (fontified t))) 2 3 (face tree-sitter-hl-face:variable fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . 288) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -2) (undo-tree-id1341 . -1) (undo-tree-id1342 . -2) (undo-tree-id1343 . -3) (undo-tree-id1344 . -2) (undo-tree-id1345 . -3) (undo-tree-id1346 . -3) (undo-tree-id1347 . -3) (undo-tree-id1348 . -3) (undo-tree-id1349 . -3)) nil (26027 21418 718536 0) 0 nil])
([nil nil ((320 . 323) (#("_" 0 1 (face tree-sitter-hl-face:constant fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -320) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) 321 (#("str" 0 1 (fontified t wrap-prefix #("			  " 0 3 (fontified t))) 1 3 (fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -321) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -3) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -2) (undo-tree-id1209 . -1) (undo-tree-id1210 . -3) (undo-tree-id1211 . -1) (undo-tree-id1212 . -3) (undo-tree-id1213 . -3) (undo-tree-id1214 . -3) (undo-tree-id1215 . -3) (undo-tree-id1216 . -3) (undo-tree-id1217 . -3) (undo-tree-id1218 . -3) (undo-tree-id1219 . -3) (undo-tree-id1220 . -3) (undo-tree-id1221 . -3) (undo-tree-id1222 . -3) (undo-tree-id1223 . -3) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (undo-tree-id1226 . -3) (undo-tree-id1227 . -3) (undo-tree-id1228 . -3) (undo-tree-id1229 . -3) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) (undo-tree-id1232 . -3) (undo-tree-id1233 . -3) (undo-tree-id1234 . -3) (undo-tree-id1235 . -3) (undo-tree-id1236 . -3) (undo-tree-id1237 . -3) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3) 324) nil (26027 21418 718409 0) 0 nil])
([nil nil ((#("static" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix #("			  " 0 3 (fontified t))) 1 2 (face tree-sitter-hl-face:type fontified t wrap-prefix #("			  " 0 3 (fontified t))) 2 3 (face tree-sitter-hl-face:type fontified t wrap-prefix #("			  " 0 3 (fontified t))) 3 4 (face tree-sitter-hl-face:type fontified t wrap-prefix #("			  " 0 3 (fontified t))) 4 5 (face tree-sitter-hl-face:type fontified t wrap-prefix #("			  " 0 3 (fontified t))) 5 6 (face tree-sitter-hl-face:type fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -268) (undo-tree-id1585 . -6) (undo-tree-id1586 . -6) (undo-tree-id1587 . -6) (undo-tree-id1588 . -6) (undo-tree-id1589 . -6) (undo-tree-id1590 . -6) (undo-tree-id1591 . -6) (undo-tree-id1592 . -6) (undo-tree-id1593 . -6) (undo-tree-id1594 . -6) (undo-tree-id1595 . -6) (undo-tree-id1596 . -6) (undo-tree-id1597 . -6) (undo-tree-id1598 . -6) (undo-tree-id1599 . -6) 274 (#(" " 0 1 (fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -274) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) 275 (t 26027 21418 733368 129000)) nil (26027 21429 748714 0) 0 nil])
([nil nil ((#("*" 0 1 (face tree-sitter-hl-face:operator fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -278) (undo-tree-id1623 . -1) 279 (t 26027 21429 760414 823000)) nil (26027 27430 484181 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -283) (283 . 284) (#("]" 0 1 (face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation.bracket) fontified nil wrap-prefix #("			  " 0 3 (fontified t)))) . -283) (283 . 284) (282 . 284) (#("," 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -282) (undo-tree-id1621 . -1) (#("." 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified t wrap-prefix #("			  " 0 3 (fontified t)))) . -283) (undo-tree-id1622 . -1) 284 (283 . 284) (282 . 283)) nil (26027 27430 484178 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -293) (293 . 294) (#(")" 0 1 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation.bracket) fontified nil wrap-prefix #("			  " 0 3 (fontified t)))) . -293) (293 . 294) (292 . 294) (283 . 292)) nil (26027 27430 484172 0) 0 nil])
([nil nil ((293 . 295)) nil (26027 27430 484170 0) 0 nil])
([nil nil ((296 . 300)) nil (26027 27430 484169 0) 0 nil])
([nil nil ((249 . 254) (#("str" 0 1 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 1 2 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 2 3 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -249) (undo-tree-id1617 . -3) 252 (#("(" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -252) (undo-tree-id1618 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face tree-sitter-hl-face:punctuation.bracket) fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -253) (undo-tree-id1619 . -1) 254 (#(")" 0 1 (fontified nil)) . -253) (253 . 254) (#(")" 0 1 (face tree-sitter-hl-face:punctuation.bracket fontified nil wrap-prefix #("		  " 0 2 (fontified t)))) . -253) (253 . 254) (252 . 254) (249 . 252) (#("i" 0 1 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -249) (undo-tree-id1620 . -1) 250 (249 . 250) (#("GetString" 0 1 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 1 2 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 2 3 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 3 4 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 4 5 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 5 6 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 6 7 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 7 8 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t))) 8 9 (face (tree-sitter-hl-face:function tree-sitter-hl-face:property) fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . 249)) nil (26027 27430 484166 0) 0 nil])
([nil nil ((947 . 955) (#("Docunm" 0 3 (face tree-sitter-hl-face:type fontified t) 3 4 (face tree-sitter-hl-face:type fontified t) 4 5 (face tree-sitter-hl-face:type fontified t) 5 6 (face tree-sitter-hl-face:type fontified t)) . -947) (undo-tree-id1614 . -5) (undo-tree-id1615 . -5) (undo-tree-id1616 . -6) 953 (950 . 953)) nil (26027 27430 484157 0) 0 nil])
([nil nil ((878 . 888) (#("children" 0 8 (face tree-sitter-hl-face:type fontified t)) . 878)) nil (26027 27430 484152 0) 0 nil])
([nil nil ((816 . 821) (#("Children" 0 8 (face tree-sitter-hl-face:type fontified t)) . 816)) nil (26027 27430 484151 0) 0 nil])
([nil nil ((821 . 822)) nil (26027 27430 484149 0) 0 nil])
([nil nil ((896 . 902) (#("Children" 0 8 (face tree-sitter-hl-face:type fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -896) (undo-tree-id1613 . -8) 904) nil (26027 27430 484148 0) 0 nil])
([nil nil ((816 . 822) (#("child" 0 1 (face tree-sitter-hl-face:type fontified t) 1 2 (face tree-sitter-hl-face:type fontified t) 2 3 (face tree-sitter-hl-face:type fontified t) 3 4 (face tree-sitter-hl-face:type fontified t) 4 5 (face tree-sitter-hl-face:type fontified t)) . -816) (undo-tree-id1611 . -5) 821 (816 . 821) (#("childs" 0 1 (face tree-sitter-hl-face:type fontified t) 1 2 (face tree-sitter-hl-face:type fontified t) 2 3 (face tree-sitter-hl-face:type fontified t) 3 4 (face tree-sitter-hl-face:type fontified t) 4 5 (face tree-sitter-hl-face:type fontified t) 5 6 (face tree-sitter-hl-face:type fontified t)) . 816) (undo-tree-id1612 . -2) 818) nil (26027 27430 484145 0) 0 nil])
([nil current ((896 . 902) (#("childs" 0 1 (face tree-sitter-hl-face:type fontified t wrap-prefix #("		  " 0 2 (fontified t))) 1 2 (face tree-sitter-hl-face:type fontified t wrap-prefix #("		  " 0 2 (fontified t))) 2 3 (face tree-sitter-hl-face:type fontified t wrap-prefix #("		  " 0 2 (fontified t))) 3 4 (face tree-sitter-hl-face:type fontified t wrap-prefix #("		  " 0 2 (fontified t))) 4 5 (face tree-sitter-hl-face:type fontified t wrap-prefix #("		  " 0 2 (fontified t))) 5 6 (face tree-sitter-hl-face:type fontified t wrap-prefix #("		  " 0 2 (fontified t)))) . -896) (undo-tree-id1610 . -6) 902) nil (26027 27430 484137 0) 0 nil])
nil
